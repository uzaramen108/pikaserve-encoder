{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://pikachu-volleyball/./src/resources/js/rand.js","webpack://pikachu-volleyball/./src/resources/js/physics.js","webpack://pikachu-volleyball/./src/resources/js/cloud_and_wave.js","webpack://pikachu-volleyball/./src/resources/js/view.js","webpack://pikachu-volleyball/./src/resources/js/keyboard.js","webpack://pikachu-volleyball/./src/resources/js/audio.js","webpack://pikachu-volleyball/./src/resources/js/pikavolley.js","webpack://pikachu-volleyball/./src/resources/js/ui.js","webpack://pikachu-volleyball/./src/resources/js/main.js","webpack://pikachu-volleyball/./src/resources/js/utils/local_storage_wrapper.js","webpack://pikachu-volleyball/./src/resources/js/assets_path.js"],"sourcesContent":["/**\n * This module contains random number generator used for the game\n */\n'use strict';\n/** @typedef {function():number} RNG */\n\n/** @type {RNG} custom RNG (random number generator) function which generates a random number in [0, 1] */\nlet customRng = null;\n\n/**\n * Return random integer in [0, 32767]\n *\n * The machine code of the original game use \"_rand()\" function in Visual Studio 1988 Library.\n * I could't find out how this function works exactly.\n * But, anyhow, it should be a function that generate a random number.\n * I decided to use custom rand function which generates random integer in [0, 32767]\n * which follows rand() function in Visual Studio 2017 Library.\n *\n * By default, it uses the function \"Math.random\" for generating a random number.\n * A custom RNG function can used by setting the \"customRng\" as the custom RNG function.\n *\n * @return {number} random integer\n */\nexport function rand() {\n  if (customRng === null) {\n    return Math.floor(32768 * Math.random());\n  }\n  return Math.floor(32768 * customRng());\n}\n\n/**\n * Set custom RNG function\n * @param {RNG} rng\n */\nexport function setCustomRng(rng) {\n  customRng = rng;\n}\n","/**\n * The Model part in the MVC pattern\n *\n * It is the core module which acts as a physics engine.\n * This physics engine calculates the movements of the ball and the players (Pikachus).\n *\n * It was gained by reverse engineering the original game.\n * The address of each function in the original machine code is specified at the comment above each function.\n * ex) FUN_00403dd0 means the original function at the address 00403dd0.\n *\n *\n * ** Some useful infos below **\n *\n *  Ground width: 432 = 0x1B0\n *  Ground height: 304 = 0x130\n *\n *  X position coordinate: [0, 432], right-direction increasing\n *  Y position coordinate: [0, 304], down-direction increasing\n *\n *  Ball radius: 20 = 0x14\n *  Ball diameter: 40 = 0x28\n *\n *  Player half-width: 32 = 0x20\n *  Player half-height: 32 = 0x20\n *  Player width: 64 = 0x40\n *  Player height: 64 = 0x40\n *\n */\n'use strict';\nimport { rand } from './rand.js';\n\n/** @constant @type {number} ground width */\nconst GROUND_WIDTH = 432;\n/** @constant @type {number} ground half-width, it is also the net pillar x coordinate */\nexport const GROUND_HALF_WIDTH = (GROUND_WIDTH / 2) | 0; // integer division\n/** @constant @type {number} player (Pikachu) length: width = height = 64 */\nconst PLAYER_LENGTH = 64;\n/** @constant @type {number} player half length */\nconst PLAYER_HALF_LENGTH = (PLAYER_LENGTH / 2) | 0; // integer division\n/** @constant @type {number} player's y coordinate when they are touching ground */\nconst PLAYER_TOUCHING_GROUND_Y_COORD = 244;\n/** @constant @type {number} ball's radius */\nconst BALL_RADIUS = 20;\n/** @constant @type {number} ball's y coordinate when it is touching ground */\nconst BALL_TOUCHING_GROUND_Y_COORD = 252;\n/** @constant @type {number} net pillar's half width (this value is on this physics engine only, not on the sprite pixel size) */\nconst NET_PILLAR_HALF_WIDTH = 25;\n/** @constant @type {number} net pillar top's top side y coordinate */\nconst NET_PILLAR_TOP_TOP_Y_COORD = 176;\n/** @constant @type {number} net pillar top's bottom side y coordinate (this value is on this physics engine only) */\nconst NET_PILLAR_TOP_BOTTOM_Y_COORD = 192;\n\n/**\n * It's for to limit the looping number of the infinite loops.\n * This constant is not in the original machine code. (The original machine code does not limit the looping number.)\n *\n * In the original ball x coord range setting (ball x coord in [20, 432]), the infinite loops in\n * {@link calculateExpectedLandingPointXFor} function and {@link expectedLandingPointXWhenPowerHit} function seems to be always terminated soon.\n * But if the ball x coord range is edited, for example, to [20, 432 - 20] for left-right symmetry,\n * it is observed that the infinite loop in {@link expectedLandingPointXWhenPowerHit} does not terminate.\n * So for safety, this infinite loop limit is included for the infinite loops mentioned above.\n * @constant @type {number}\n */\nconst INFINITE_LOOP_LIMIT = 1000;\n\n/**\n * Class representing a pack of physical objects i.e. players and ball\n * whose physical values are calculated and set by {@link physicsEngine} function\n */\nexport class PikaPhysics {\n  /**\n   * Create a physics pack\n   * @param {boolean} isPlayer1Computer Is player on the left (player 1) controlled by computer?\n   * @param {boolean} isPlayer2Computer Is player on the right (player 2) controlled by computer?\n   */\n  constructor(isPlayer1Computer, isPlayer2Computer) {\n    this.player1 = new Player(false, isPlayer1Computer);\n    this.player2 = new Player(true, isPlayer2Computer);\n    this.ball = new Ball(false);\n  }\n\n  /**\n   * run {@link physicsEngine} function with this physics object and user input\n   *\n   * @param {PikaUserInput[]} userInputArray userInputArray[0]: PikaUserInput object for player 1, userInputArray[1]: PikaUserInput object for player 2\n   * @return {boolean} Is ball touching ground?\n   */\n  runEngineForNextFrame(userInputArray) {\n    const isBallTouchingGround = physicsEngine(\n      this.player1,\n      this.player2,\n      this.ball,\n      userInputArray\n    );\n    return isBallTouchingGround;\n  }\n}\n\n/**\n * Class (or precisely, Interface) representing user input (from keyboard or joystick, whatever)\n */\nexport class PikaUserInput {\n  constructor() {\n    /** @type {number} 0: no horizontal-direction input, -1: left-direction input, 1: right-direction input */\n    this.xDirection = 0;\n    /** @type {number} 0: no vertical-direction input, -1: up-direction input, 1: down-direction input */\n    this.yDirection = 0;\n    /** @type {number} 0: auto-repeated or no power hit input, 1: not auto-repeated power hit input */\n    this.powerHit = 0;\n  }\n}\n\n/**\n * Class representing a player\n *\n * Player 1 property address: 00411F28 -> +28 -> +10 -> +C -> ...\n * Player 2 property address: 00411F28 -> +28 -> +10 -> +10 -> ...\n * The \"...\" part is written on the line comment at the right side of each property.\n * e.g. address to player1.isPlayer: 00411F28 -> +28 -> +10 -> +C -> +A0\n * e.g. address to player2.isComputer: 00411F28 -> +28 -> +10 -> +10 -> +A4\n *\n * For initial values: refer to FUN_000403a90 && FUN_00401f40\n */\nclass Player {\n  /**\n   * create a player\n   * @param {boolean} isPlayer2 Is this player on the right side?\n   * @param {boolean} isComputer Is this player controlled by computer?\n   */\n  constructor(isPlayer2, isComputer) {\n    /** @type {boolean} Is this player on the right side? */\n    this.isPlayer2 = isPlayer2; // 0xA0\n    /** @type {boolean} Is controlled by computer? */\n    this.isComputer = isComputer; // 0xA4\n    this.initializeForNewRound();\n\n    /** @type {number} -1: left, 0: no diving, 1: right */\n    this.divingDirection = 0; // 0xB4\n    /** @type {number} */\n    this.lyingDownDurationLeft = -1; // 0xB8\n    /** @type {boolean} */\n    this.isWinner = false; // 0xD0\n    /** @type {boolean} */\n    this.gameEnded = false; // 0xD4\n\n    /**\n     * It flips randomly to 0 or 1 by the {@link letComputerDecideUserInput} function (FUN_00402360)\n     * when ball is hanging around on the other player's side.\n     * If it is 0, computer player stands by around the middle point of their side.\n     * If it is 1, computer player stands by adjacent to the net.\n     * @type {number} 0 or 1\n     */\n    this.computerWhereToStandBy = 0; // 0xDC\n\n    /**\n     * This property is not in the player pointers of the original source code.\n     * But for sound effect (especially for stereo sound),\n     * it is convenient way to give sound property to a Player.\n     * The original name is stereo sound.\n     * @type {Object.<string, boolean>}\n     */\n    this.sound = {\n      pipikachu: false,\n      pika: false,\n      chu: false,\n    };\n  }\n\n  /**\n   * initialize for new round\n   */\n  initializeForNewRound() {\n    /** @type {number} x coord */\n    this.x = 36; // 0xA8 // initialized to 36 (player1) or 396 (player2)\n    if (this.isPlayer2) {\n      this.x = GROUND_WIDTH - 36;\n    }\n    /** @type {number} y coord */\n    this.y = PLAYER_TOUCHING_GROUND_Y_COORD; // 0xAC   // initialized to 244\n    /** @type {number} y direction velocity */\n    this.yVelocity = 0; // 0xB0  // initialized to 0\n    /** @type {boolean} */\n    this.isCollisionWithBallHappened = false; // 0xBC   // initialized to 0 i.e false\n    \n\n    /**\n     * Player's state\n     * 0: normal, 1: jumping, 2: jumping_and_power_hitting, 3: diving\n     * 4: lying_down_after_diving\n     * 5: win!, 6: lost..\n     * @type {number} 0, 1, 2, 3, 4, 5 or 6\n     */\n    this.state = 0; // 0xC0   // initialized to 0\n    /** @type {number} */\n    this.frameNumber = 0; // 0xC4   // initialized to 0\n    /** @type {number} */\n    this.normalStatusArmSwingDirection = 1; // 0xC8  // initialized to 1\n    /** @type {number} */\n    this.delayBeforeNextFrame = 0; // 0xCC  // initialized to 0\n\n    /**\n     * This value is initialized to (_rand() % 5) before the start of every round.\n     * The greater the number, the bolder the computer player.\n     *\n     * If computer has higher boldness,\n     * judges more the ball is hanging around the other player's side,\n     * has greater distance to the expected landing point of the ball,\n     * jumps more,\n     * and dives less.\n     * See the source code of the {@link letComputerDecideUserInput} function (FUN_00402360).\n     *\n     * @type {number} 0, 1, 2, 3 or 4\n     */\n    this.computerBoldness = rand() % 5; // 0xD8  // initialized to (_rand() % 5)\n  }\n}\n\n/**\n * Class representing a ball\n *\n * Ball property address: 00411F28 -> +28 -> +10 -> +14 -> ...\n * The \"...\" part is written on the line comment at the right side of each property.\n * e.g. address to ball.fineRotation: 00411F28 -> +28 -> +10 -> +14 -> +48\n *\n * For initial Values: refer to FUN_000403a90 && FUN_00402d60\n */\nclass Ball {\n  /**\n   * Create a ball\n   * @param {boolean} isPlayer2Serve Will player 2 serve on this new round?\n   */\n  constructor(isPlayer2Serve) {\n    this.initializeForNewRound(isPlayer2Serve);\n    /** @type {number} x coord of expected landing point */\n    this.expectedLandingPointX = 0; // 0x40\n    /**\n     * ball rotation frame number selector\n     * During the period where it continues to be 5, hyper ball glitch occur.\n     * @type {number} 0, 1, 2, 3, 4 or 5\n     * */\n    this.rotation = 0; // 0x44\n    /** @type {number} */\n    this.fineRotation = 0; // 0x48\n    /** @type {number} x coord for punch effect */\n    this.punchEffectX = 0; // 0x50\n    /** @type {number} y coord for punch effect */\n    this.punchEffectY = 0; // 0x54\n\n    /**\n     * Following previous values are for trailing effect for power hit\n     * @type {number}\n     */\n    this.previousX = 0; // 0x58\n    this.previousPreviousX = 0; // 0x5c\n    this.previousY = 0; // 0x60\n    this.previousPreviousY = 0; // 0x64\n\n    /**\n     * this property is not in the ball pointer of the original source code.\n     * But for sound effect (especially for stereo sound),\n     * it is convenient way to give sound property to a Ball.\n     * The original name is stereo sound.\n     */\n    this.sound = {\n      powerHit: false,\n      ballTouchesGround: false,\n    };\n  }\n\n  /**\n   * Initialize for new round\n   * @param {boolean} isPlayer2Serve will player on the right side serve on this new round?\n   */\n  initializeForNewRound(isPlayer2Serve) {\n    /** @type {number} x coord */\n    this.x = 56; // 0x30    // initialized to 56 or 376\n    if (isPlayer2Serve === true) {\n      this.x = GROUND_WIDTH - 56;\n    }\n    /** @type {number} y coord */\n    this.y = 0; // 0x34   // initialized to 0\n    /** @type {number} x direction velocity */\n    this.xVelocity = 0; // 0x38  // initialized to 0\n    /** @type {number} y direction velocity */\n    this.yVelocity = 1; // 0x3C  // initialized to 1\n    /** @type {number} punch effect radius */\n    this.punchEffectRadius = 0; // 0x4c // initialized to 0\n    /** @type {boolean} is power hit */\n    this.isPowerHit = false; // 0x68  // initialized to 0 i.e. false\n  }\n}\n\n/**\n * FUN_00403dd0\n * This is the Pikachu Volleyball physics engine!\n * This physics engine calculates and set the physics values for the next frame.\n *\n * @param {Player} player1 player on the left side\n * @param {Player} player2 player on the right side\n * @param {Ball} ball ball\n * @param {PikaUserInput[]} userInputArray userInputArray[0]: user input for player 1, userInputArray[1]: user input for player 2\n * @return {boolean} Is ball touching ground?\n */\nfunction physicsEngine(player1, player2, ball, userInputArray) {\n  const isBallTouchingGround =\n    processCollisionBetweenBallAndWorldAndSetBallPosition(ball);\n\n  let player;\n  let theOtherPlayer;\n  for (let i = 0; i < 2; i++) {\n    if (i === 0) {\n      player = player1;\n      theOtherPlayer = player2;\n    } else {\n      player = player2;\n      theOtherPlayer = player1;\n    }\n\n    // FUN_00402d90 omitted\n    // FUN_00402810 omitted\n    // this javascript code is refactored not to need above two function except for\n    // a part of FUN_00402d90:\n    // FUN_00402d90 include FUN_004031b0(calculateExpectedLandingPointXFor)\n    calculateExpectedLandingPointXFor(ball); // calculate expected_X;\n\n    processPlayerMovementAndSetPlayerPosition(\n      player,\n      userInputArray[i],\n      theOtherPlayer,\n      ball\n    );\n\n    // FUN_00402830 omitted\n    // FUN_00406020 omitted\n    // These two functions omitted above maybe participate in graphic drawing for a player\n  }\n\n  for (let i = 0; i < 2; i++) {\n    if (i === 0) {\n      player = player1;\n    } else {\n      player = player2;\n    }\n\n    // FUN_00402810 omitted: this javascript code is refactored not to need this function\n\n    const isHappened = isCollisionBetweenBallAndPlayerHappened(\n      ball,\n      player.x,\n      player.y\n    );\n    if (isHappened === true) {\n      if (player.isCollisionWithBallHappened === false) {\n        processCollisionBetweenBallAndPlayer(\n          ball,\n          player.x,\n          userInputArray[i],\n          player.state\n        );\n        player.isCollisionWithBallHappened = true;\n      }\n    } else {\n      player.isCollisionWithBallHappened = false;\n    }\n  }\n\n  // FUN_00403040\n  // FUN_00406020\n  // These two functions omitted above maybe participate in graphic drawing for a player\n\n  return isBallTouchingGround;\n}\n\n/**\n * FUN_00403070\n * Is collision between ball and player happened?\n * @param {Ball} ball\n * @param {Player[\"x\"]} playerX player.x\n * @param {Player[\"y\"]} playerY player.y\n * @return {boolean}\n */\nfunction isCollisionBetweenBallAndPlayerHappened(ball, playerX, playerY) {\n  let diff = ball.x - playerX;\n  if (Math.abs(diff) <= PLAYER_HALF_LENGTH) {\n    diff = ball.y - playerY;\n    if (Math.abs(diff) <= PLAYER_HALF_LENGTH) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * FUN_00402dc0\n * Process collision between ball and world and set ball position\n * @param {Ball} ball\n * @return {boolean} Is ball touching ground?\n */\nfunction processCollisionBetweenBallAndWorldAndSetBallPosition(ball) {\n  // This is not part of this function in the original assembly code.\n  // In the original assembly code, it is processed in other function (FUN_00402ee0)\n  // But it is proper to process here.\n  ball.previousPreviousX = ball.previousX;\n  ball.previousPreviousY = ball.previousY;\n  ball.previousX = ball.x;\n  ball.previousY = ball.y;\n\n  // \"(ball.xVelocity / 2) | 0\" is integer division by 2\n  let futureFineRotation = ball.fineRotation + ((ball.xVelocity / 2) | 0);\n  // If futureFineRotation === 50, it skips next if statement finely.\n  // Then ball.fineRotation = 50, and then ball.rotation = 5 (which designates hyper ball sprite!).\n  // In this way, hyper ball glitch occur!\n  // If this happen at the end of round,\n  // since ball.xVelocity is 0-initialized at each start of round,\n  // hyper ball sprite is rendered continuously until a collision happens.\n  if (futureFineRotation < 0) {\n    futureFineRotation += 50;\n  } else if (futureFineRotation > 50) {\n    futureFineRotation += -50;\n  }\n  ball.fineRotation = futureFineRotation;\n  ball.rotation = (ball.fineRotation / 10) | 0; // integer division\n\n  const futureBallX = ball.x + ball.xVelocity;\n  /*\n    If the center of ball would get out of left world bound or right world bound, bounce back.\n    \n    In this if statement, when considering left-right symmetry,\n    \"futureBallX > GROUND_WIDTH\" should be changed to \"futureBallX > (GROUND_WIDTH - BALL_RADIUS)\",\n    or \"futureBallX < BALL_RADIUS\" should be changed to \"futureBallX < 0\".\n    Maybe the former one is more proper when seeing Pikachu player's x-direction boundary.\n    Is this a mistake of the author of the original game?\n    Or, was it set to this value to resolve infinite loop problem? (See comments on the constant INFINITE_LOOP_LIMIT.)\n    If apply (futureBallX > (GROUND_WIDTH - BALL_RADIUS)), and if the maximum number of loop is not limited,\n    it is observed that infinite loop in the function expectedLandingPointXWhenPowerHit does not terminate.\n  */\n  if (futureBallX < BALL_RADIUS || futureBallX > GROUND_WIDTH) {\n    ball.xVelocity = -ball.xVelocity;\n  }\n\n  let futureBallY = ball.y + ball.yVelocity;\n  // if the center of ball would get out of upper world bound\n  if (futureBallY < 0) {\n    ball.yVelocity = 1;\n  }\n\n  // If ball touches net\n  if (\n    Math.abs(ball.x - GROUND_HALF_WIDTH) < NET_PILLAR_HALF_WIDTH &&\n    ball.y > NET_PILLAR_TOP_TOP_Y_COORD\n  ) {\n    if (ball.y <= NET_PILLAR_TOP_BOTTOM_Y_COORD) {\n      if (ball.yVelocity > 0) {\n        ball.yVelocity = -ball.yVelocity;\n      }\n    } else {\n      if (ball.x < GROUND_HALF_WIDTH) {\n        ball.xVelocity = -Math.abs(ball.xVelocity);\n      } else {\n        ball.xVelocity = Math.abs(ball.xVelocity);\n      }\n    }\n  }\n\n  futureBallY = ball.y + ball.yVelocity;\n  // if ball would touch ground\n  if (futureBallY > BALL_TOUCHING_GROUND_Y_COORD) {\n    // FUN_00408470 omitted\n    // the function omitted above receives 100 * (ball.x - 216),\n    // i.e. horizontal displacement from net maybe for stereo sound?\n    // code function (ballpointer + 0x28 + 0x10)? omitted\n    // the omitted two functions maybe do a part of sound playback role.\n    ball.sound.ballTouchesGround = true;\n\n    ball.yVelocity = -ball.yVelocity;\n    ball.punchEffectX = ball.x;\n    ball.y = BALL_TOUCHING_GROUND_Y_COORD;\n    ball.punchEffectRadius = BALL_RADIUS;\n    ball.punchEffectY = BALL_TOUCHING_GROUND_Y_COORD + BALL_RADIUS;\n    return true;\n  }\n  ball.y = futureBallY;\n  ball.x = ball.x + ball.xVelocity;\n  ball.yVelocity += 1;\n\n  return false;\n}\n\n/**\n * FUN_00401fc0\n * Process player movement according to user input and set player position\n * @param {Player} player\n * @param {PikaUserInput} userInput\n * @param {Player} theOtherPlayer\n * @param {Ball} ball\n */\nfunction processPlayerMovementAndSetPlayerPosition(\n  player,\n  userInput,\n  theOtherPlayer,\n  ball\n) {\n  if (player.isComputer === true) {\n    player.x = 500;\n    letComputerDecideUserInput(player, ball, theOtherPlayer, userInput);\n  }\n\n  // if player is lying down.. don't move\n  if (player.state === 4) {\n    player.lyingDownDurationLeft += -1;\n    if (player.lyingDownDurationLeft < -1) {\n      player.state = 0;\n    }\n    return;\n  }\n\n  // process x-direction movement\n  let playerVelocityX = 0;\n  if (player.state < 5) {\n    if (player.state < 3) {\n      playerVelocityX = userInput.xDirection * 6;\n    } else {\n      // player.state === 3 i.e. player is diving..\n      playerVelocityX = player.divingDirection * 8;\n    }\n  }\n\n  const futurePlayerX = player.x + playerVelocityX;\n  player.x = futurePlayerX;\n\n  // process player's x-direction world boundary\n  if (player.isPlayer2 === false) {\n    // if player is player1\n    if (futurePlayerX < PLAYER_HALF_LENGTH) {\n      player.x = PLAYER_HALF_LENGTH;\n    } else if (futurePlayerX > GROUND_HALF_WIDTH - PLAYER_HALF_LENGTH) {\n      player.x = GROUND_HALF_WIDTH - PLAYER_HALF_LENGTH;\n    }\n  } else {\n    // if player is player2\n    if (futurePlayerX < GROUND_HALF_WIDTH + PLAYER_HALF_LENGTH) {\n      player.x = GROUND_HALF_WIDTH + PLAYER_HALF_LENGTH;\n    } else if (futurePlayerX > GROUND_WIDTH - PLAYER_HALF_LENGTH) {\n      player.x = GROUND_WIDTH - PLAYER_HALF_LENGTH;\n    }\n  }\n\n  // jump\n  if (\n    player.state < 3 &&\n    userInput.yDirection === -1 && // up-direction input\n    player.y === PLAYER_TOUCHING_GROUND_Y_COORD // player is touching on the ground\n  ) {\n    player.yVelocity = -16;\n    player.state = 1;\n    player.frameNumber = 0;\n    // maybe-stereo-sound function FUN_00408470 (0x90) omitted:\n    // refer to a detailed comment above about this function\n    // maybe-sound code function (playerpointer + 0x90 + 0x10)? omitted\n    player.sound.chu = true;\n  }\n\n  // gravity\n  const futurePlayerY = player.y + player.yVelocity;\n  player.y = futurePlayerY;\n  if (futurePlayerY < PLAYER_TOUCHING_GROUND_Y_COORD) {\n    player.yVelocity += 1;\n  } else if (futurePlayerY > PLAYER_TOUCHING_GROUND_Y_COORD) {\n    // if player is landing..\n    player.yVelocity = 0;\n    player.y = PLAYER_TOUCHING_GROUND_Y_COORD;\n    player.frameNumber = 0;\n    if (player.state === 3) {\n      // if player is diving..\n      player.state = 4;\n      player.frameNumber = 0;\n      player.lyingDownDurationLeft = 3;\n    } else {\n      player.state = 0;\n    }\n  }\n\n  if (userInput.powerHit === 1) {\n    if (player.state === 1) {\n      // if player is jumping..\n      // then player do power hit!\n      player.delayBeforeNextFrame = 5;\n      player.frameNumber = 0;\n      player.state = 2;\n      // maybe-sound function (playerpointer + 0x90 + 0x18)? omitted\n      // maybe-stereo-sound function FUN_00408470 (0x90) omitted:\n      // refer to a detailed comment above about this function\n      // maybe-sound function (playerpointer + 0x90 + 0x14)? omitted\n      player.sound.pika = true;\n    } else if (player.state === 0 && userInput.xDirection !== 0) {\n      // then player do diving!\n      player.state = 3;\n      player.frameNumber = 0;\n      player.divingDirection = userInput.xDirection;\n      player.yVelocity = -5;\n      // maybe-stereo-sound function FUN_00408470 (0x90) omitted:\n      // refer to a detailed comment above about this function\n      // maybe-sound code function (playerpointer + 0x90 + 0x10)? omitted\n      player.sound.chu = true;\n    }\n  }\n\n  if (player.state === 1) {\n    player.frameNumber = (player.frameNumber + 1) % 3;\n  } else if (player.state === 2) {\n    if (player.delayBeforeNextFrame < 1) {\n      player.frameNumber += 1;\n      if (player.frameNumber > 4) {\n        player.frameNumber = 0;\n        player.state = 1;\n      }\n    } else {\n      player.delayBeforeNextFrame -= 1;\n    }\n  } else if (player.state === 0) {\n    player.delayBeforeNextFrame += 1;\n    if (player.delayBeforeNextFrame > 3) {\n      player.delayBeforeNextFrame = 0;\n      const futureFrameNumber =\n        player.frameNumber + player.normalStatusArmSwingDirection;\n      if (futureFrameNumber < 0 || futureFrameNumber > 4) {\n        player.normalStatusArmSwingDirection =\n          -player.normalStatusArmSwingDirection;\n      }\n      player.frameNumber =\n        player.frameNumber + player.normalStatusArmSwingDirection;\n    }\n  }\n\n  if (player.gameEnded === true) {\n    if (player.state === 0) {\n      if (player.isWinner === true) {\n        player.state = 5;\n        // maybe-stereo-sound function FUN_00408470 (0x90) omitted:\n        // refer to a detailed comment above about this function\n        // maybe-sound code function (0x98 + 0x10) omitted\n        player.sound.pipikachu = true;\n      } else {\n        player.state = 6;\n      }\n      player.delayBeforeNextFrame = 0;\n      player.frameNumber = 0;\n    }\n    processGameEndFrameFor(player);\n  }\n}\n\n/**\n * FUN_004025e0\n * Process game end frame (for winner and loser motions) for the given player\n * @param {Player} player\n */\nfunction processGameEndFrameFor(player) {\n  if (player.gameEnded === true && player.frameNumber < 4) {\n    player.delayBeforeNextFrame += 1;\n    if (player.delayBeforeNextFrame > 4) {\n      player.delayBeforeNextFrame = 0;\n      player.frameNumber += 1;\n    }\n  }\n}\n\n/**\n * FUN_004030a0\n * Process collision between ball and player.\n * This function only sets velocity of ball and expected landing point x of ball.\n * This function does not set position of ball.\n * The ball position is set by {@link processCollisionBetweenBallAndWorldAndSetBallPosition} function\n *\n * @param {Ball} ball\n * @param {Player[\"x\"]} playerX\n * @param {PikaUserInput} userInput\n * @param {Player[\"state\"]} playerState\n */\nfunction processCollisionBetweenBallAndPlayer(\n  ball,\n  playerX,\n  userInput,\n  playerState\n) {\n  // playerX is pika's x position\n  // if collision occur,\n  // greater the x position difference between pika and ball,\n  // greater the x velocity of the ball.\n  if (ball.x < playerX) {\n    // Since javascript division is float division by default,\n    // Here we use \"| 0\" to do integer division (refer to: https://stackoverflow.com/a/17218003/8581025)\n    ball.xVelocity = -((Math.abs(ball.x - playerX) / 3) | 0);\n  } else if (ball.x > playerX) {\n    ball.xVelocity = (Math.abs(ball.x - playerX) / 3) | 0;\n  }\n\n  // If ball velocity x is 0, randomly choose one of -1, 0, 1.\n  if (ball.xVelocity === 0) {\n    ball.xVelocity = (rand() % 3) - 1;\n  }\n\n  const ballAbsYVelocity = Math.abs(ball.yVelocity);\n  ball.yVelocity = -ballAbsYVelocity;\n\n  if (ballAbsYVelocity < 15) {\n    ball.yVelocity = -15;\n  }\n\n  // player is jumping and power hitting\n  if (playerState === 2) {\n    if (ball.x < GROUND_HALF_WIDTH) {\n      ball.xVelocity = (Math.abs(userInput.xDirection) + 1) * 10;\n    } else {\n      ball.xVelocity = -(Math.abs(userInput.xDirection) + 1) * 10;\n    }\n    ball.punchEffectX = ball.x;\n    ball.punchEffectY = ball.y;\n\n    ball.yVelocity = Math.abs(ball.yVelocity) * userInput.yDirection * 2;\n    ball.punchEffectRadius = BALL_RADIUS;\n    // maybe-stereo-sound function FUN_00408470 (0x90) omitted:\n    // refer to a detailed comment above about this function\n    // maybe-soundcode function (ballpointer + 0x24 + 0x10) omitted:\n    ball.sound.powerHit = true;\n\n    ball.isPowerHit = true;\n  } else {\n    ball.isPowerHit = false;\n  }\n\n  calculateExpectedLandingPointXFor(ball);\n}\n\n/**\n * FUN_004031b0\n * Calculate x coordinate of expected landing point of the ball\n * @param {Ball} ball\n */\nfunction calculateExpectedLandingPointXFor(ball) {\n  const copyBall = {\n    x: ball.x,\n    y: ball.y,\n    xVelocity: ball.xVelocity,\n    yVelocity: ball.yVelocity,\n  };\n  let loopCounter = 0;\n  while (true) {\n    loopCounter++;\n\n    const futureCopyBallX = copyBall.xVelocity + copyBall.x;\n    if (futureCopyBallX < BALL_RADIUS || futureCopyBallX > GROUND_WIDTH) {\n      copyBall.xVelocity = -copyBall.xVelocity;\n    }\n    if (copyBall.y + copyBall.yVelocity < 0) {\n      copyBall.yVelocity = 1;\n    }\n\n    // If copy ball touches net\n    if (\n      Math.abs(copyBall.x - GROUND_HALF_WIDTH) < NET_PILLAR_HALF_WIDTH &&\n      copyBall.y > NET_PILLAR_TOP_TOP_Y_COORD\n    ) {\n      // It maybe should be <= NET_PILLAR_TOP_BOTTOM_Y_COORD as in FUN_00402dc0, is it the original game author's mistake?\n      if (copyBall.y < NET_PILLAR_TOP_BOTTOM_Y_COORD) {\n        if (copyBall.yVelocity > 0) {\n          copyBall.yVelocity = -copyBall.yVelocity;\n        }\n      } else {\n        if (copyBall.x < GROUND_HALF_WIDTH) {\n          copyBall.xVelocity = -Math.abs(copyBall.xVelocity);\n        } else {\n          copyBall.xVelocity = Math.abs(copyBall.xVelocity);\n        }\n      }\n    }\n\n    copyBall.y = copyBall.y + copyBall.yVelocity;\n    // if copyBall would touch ground\n    if (\n      copyBall.y > BALL_TOUCHING_GROUND_Y_COORD ||\n      loopCounter >= INFINITE_LOOP_LIMIT\n    ) {\n      break;\n    }\n    copyBall.x = copyBall.x + copyBall.xVelocity;\n    copyBall.yVelocity += 1;\n  }\n  ball.expectedLandingPointX = copyBall.x;\n}\n\n/**\n * FUN_00402360\n * Computer controls its player by this function.\n * Computer decides the user input for the player it controls,\n * according to the game situation it figures out\n * by the given parameters (player, ball and theOtherPlayer),\n * and reflects these to the given user input object.\n *\n * @param {Player} player The player whom computer controls\n * @param {Ball} ball ball\n * @param {Player} theOtherPlayer The other player\n * @param {PikaUserInput} userInput user input of the player whom computer controls\n */\nfunction letComputerDecideUserInput(player, ball, theOtherPlayer, userInput) {\n  \n}\n\n/**\n * FUN_00402630\n * This function is called by {@link letComputerDecideUserInput},\n * and also sets x and y direction user input so that it participate in\n * the decision of the direction of power hit.\n * @param {Player} player the player whom computer controls\n * @param {Ball} ball ball\n * @param {Player} theOtherPlayer The other player\n * @param {PikaUserInput} userInput user input for the player whom computer controls\n * @return {boolean} Will input power hit?\n */\nfunction decideWhetherInputPowerHit(player, ball, theOtherPlayer, userInput) {\n  return false;\n}\n\n/**\n * FUN_00402870\n * This function is called by {@link decideWhetherInputPowerHit},\n * and calculates the expected x coordinate of the landing point of the ball\n * when power hit\n * @param {PikaUserInput[\"xDirection\"]} userInputXDirection\n * @param {PikaUserInput[\"yDirection\"]} userInputYDirection\n * @param {Ball} ball\n * @return {number} x coord of expected landing point when power hit the ball\n */\nfunction expectedLandingPointXWhenPowerHit(\n  userInputXDirection,\n  userInputYDirection,\n  ball\n) {\n  const copyBall = {\n    x: ball.x,\n    y: ball.y,\n    xVelocity: ball.xVelocity,\n    yVelocity: ball.yVelocity,\n  };\n  if (copyBall.x < GROUND_HALF_WIDTH) {\n    copyBall.xVelocity = (Math.abs(userInputXDirection) + 1) * 10;\n  } else {\n    copyBall.xVelocity = -(Math.abs(userInputXDirection) + 1) * 10;\n  }\n  copyBall.yVelocity = Math.abs(copyBall.yVelocity) * userInputYDirection * 2;\n\n  let loopCounter = 0;\n  while (true) {\n    loopCounter++;\n\n    const futureCopyBallX = copyBall.x + copyBall.xVelocity;\n    if (futureCopyBallX < BALL_RADIUS || futureCopyBallX > GROUND_WIDTH) {\n      copyBall.xVelocity = -copyBall.xVelocity;\n    }\n    if (copyBall.y + copyBall.yVelocity < 0) {\n      copyBall.yVelocity = 1;\n    }\n    if (\n      Math.abs(copyBall.x - GROUND_HALF_WIDTH) < NET_PILLAR_HALF_WIDTH &&\n      copyBall.y > NET_PILLAR_TOP_TOP_Y_COORD\n    ) {\n      /*\n        The code below maybe is intended to make computer do mistakes.\n        The player controlled by computer occasionally power hit ball that is bounced back by the net pillar,\n        since code below do not anticipate the bounce back.\n      */\n      if (copyBall.yVelocity > 0) {\n        copyBall.yVelocity = -copyBall.yVelocity;\n      }\n      /*\n      An alternative code for making the computer not do those mistakes is as below.\n\n      if (copyBall.y <= NET_PILLAR_TOP_BOTTOM_Y_COORD) {\n        if (copyBall.yVelocity > 0) {\n          copyBall.yVelocity = -copyBall.yVelocity;\n        }\n      } else {\n        if (copyBall.x < GROUND_HALF_WIDTH) {\n          copyBall.xVelocity = -Math.abs(copyBall.xVelocity);\n        } else {\n          copyBall.xVelocity = Math.abs(copyBall.xVelocity);\n        }\n      }\n      */\n    }\n    copyBall.y = copyBall.y + copyBall.yVelocity;\n    if (\n      copyBall.y > BALL_TOUCHING_GROUND_Y_COORD ||\n      loopCounter >= INFINITE_LOOP_LIMIT\n    ) {\n      return copyBall.x;\n    }\n    copyBall.x = copyBall.x + copyBall.xVelocity;\n    copyBall.yVelocity += 1;\n  }\n}\n","/**\n * This module takes charge of the physical motion of clouds (on the sky) and wave (on the bottom of game screen) in the game.\n * It is also a Model in MVC pattern and also rendered by \"view.js\".\n *\n * It is gained by reverse engineering the original game.\n * The address of the original function is in the comment.\n * ex) FUN_00404770 means the function at the address 00404770 in the machine code.\n */\n'use strict';\nimport { rand } from './rand.js';\n\n/**\n * Class represents a cloud\n */\nexport class Cloud {\n  constructor() {\n    this.topLeftPointX = -68 + (rand() % (432 + 68));\n    this.topLeftPointY = rand() % 152;\n    this.topLeftPointXVelocity = 1 + (rand() % 2);\n    this.sizeDiffTurnNumber = rand() % 11;\n  }\n\n  get sizeDiff() {\n    // this same as return [0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0][this.sizeDiffTurnNumber]\n    return 5 - Math.abs(this.sizeDiffTurnNumber - 5);\n  }\n\n  get spriteTopLeftPointX() {\n    return this.topLeftPointX - this.sizeDiff;\n  }\n\n  get spriteTopLeftPointY() {\n    return this.topLeftPointY - this.sizeDiff;\n  }\n\n  get spriteWidth() {\n    return 48 + 2 * this.sizeDiff;\n  }\n\n  get spriteHeight() {\n    return 24 + 2 * this.sizeDiff;\n  }\n}\n\n/**\n * Class representing wave\n */\nexport class Wave {\n  constructor() {\n    this.verticalCoord = 0;\n    this.verticalCoordVelocity = 2;\n    this.yCoords = [];\n    for (let i = 0; i < 432 / 16; i++) {\n      this.yCoords.push(314);\n    }\n  }\n}\n\n/**\n * FUN_00404770\n * Move clouds and wave\n * @param {Cloud[]} cloudArray\n * @param {Wave} wave\n */\nexport function cloudAndWaveEngine(cloudArray, wave) {\n  for (let i = 0; i < 10; i++) {\n    cloudArray[i].topLeftPointX += cloudArray[i].topLeftPointXVelocity;\n    if (cloudArray[i].topLeftPointX > 432) {\n      cloudArray[i].topLeftPointX = -68;\n      cloudArray[i].topLeftPointY = rand() % 152;\n      cloudArray[i].topLeftPointXVelocity = 1 + (rand() % 2);\n    }\n    cloudArray[i].sizeDiffTurnNumber =\n      (cloudArray[i].sizeDiffTurnNumber + 1) % 11;\n  }\n\n  wave.verticalCoord += wave.verticalCoordVelocity;\n  if (wave.verticalCoord > 32) {\n    wave.verticalCoord = 32;\n    wave.verticalCoordVelocity = -1;\n  } else if (wave.verticalCoord < 0 && wave.verticalCoordVelocity < 0) {\n    wave.verticalCoordVelocity = 2;\n    wave.verticalCoord = -(rand() % 40);\n  }\n\n  for (let i = 0; i < 432 / 16; i++) {\n    wave.yCoords[i] = 314 - wave.verticalCoord + (rand() % 3);\n  }\n}\n","/**\n * The View part in the MVC pattern\n *\n * Some codes in this module were gained by reverse engineering the original machine code.\n * The codes gained by reverse engineering are commented by the address of the function referred to in the machine code.\n * ex) FUN_00405d50 means the function at the address 00405d50 in the machine code.\n */\n'use strict';\nimport { AnimatedSprite } from '@pixi/sprite-animated';\nimport { Sprite } from '@pixi/sprite';\nimport { Container } from '@pixi/display';\nimport { Cloud, Wave, cloudAndWaveEngine } from './cloud_and_wave.js';\nimport { ASSETS_PATH } from './assets_path.js';\n\n/** @typedef {import('@pixi/loaders').LoaderResource} LoaderResource */\n/** @typedef {import('@pixi/core').Texture} Texture */\n\nconst TEXTURES = ASSETS_PATH.TEXTURES;\n\n/** @constant @type {number} number of clouds to be rendered */\nconst NUM_OF_CLOUDS = 10;\n\n/**\n * Class representing intro view where the man with a briefcase mark appears\n */\nexport class IntroView {\n  /**\n   * Create an IntroView object\n   * @param {Object.<string,LoaderResource>} resources loader.resources\n   */\n  constructor(resources) {\n    const textures = resources[ASSETS_PATH.SPRITE_SHEET].textures;\n\n    this.mark = makeSpriteWithAnchorXY(textures, TEXTURES.MARK, 0.5, 0.5);\n    this.mark.x = 432 / 2;\n    this.mark.y = 304 / 2;\n\n    this.container = new Container();\n    this.container.addChild(this.mark);\n  }\n\n  /** @return {boolean} Is visible? */\n  get visible() {\n    return this.container.visible;\n  }\n\n  /** @param {boolean} bool Is visible? */\n  set visible(bool) {\n    this.container.visible = bool;\n  }\n\n  /**\n   * draw \"a man with a briefcase\" mark\n   * @param {number} frameCounter\n   */\n  drawMark(frameCounter) {\n    const mark = this.mark;\n    if (frameCounter === 0) {\n      mark.alpha = 0;\n      return;\n    }\n    if (frameCounter < 100) {\n      mark.alpha = Math.min(1, mark.alpha + 1 / 25);\n    } else if (frameCounter >= 100) {\n      mark.alpha = Math.max(0, mark.alpha - 1 / 25);\n    }\n  }\n}\n\n/**\n * Class representing menu view where you can select \"play with computer\" or \"play with friend\"\n */\nexport class MenuView {\n  /**\n   * Create a MenuView object\n   * @param {Object.<string,LoaderResource>} resources loader.resources\n   */\n  constructor(resources) {\n    const textures = resources[ASSETS_PATH.SPRITE_SHEET].textures;\n\n    this.messages = {\n      pokemon: makeSpriteWithAnchorXY(textures, TEXTURES.POKEMON, 0, 0),\n      pikachuVolleyball: makeSpriteWithAnchorXY(\n        textures,\n        TEXTURES.PIKACHU_VOLLEYBALL,\n        0,\n        0\n      ),\n      withWho: [\n        makeSpriteWithAnchorXY(textures, TEXTURES.WITH_COMPUTER, 0, 0),\n        makeSpriteWithAnchorXY(textures, TEXTURES.WITH_FRIEND, 0, 0),\n      ],\n      sachisoft: makeSpriteWithAnchorXY(textures, TEXTURES.SACHISOFT, 0, 0),\n      fight: makeSpriteWithAnchorXY(textures, TEXTURES.FIGHT, 0, 0),\n    };\n    this.sittingPikachuTilesContainer =\n      makeSittingPikachuTilesContainer(textures);\n\n    // referred to FUN_004059f0\n    this.messages.sachisoft.x = 216 - this.messages.sachisoft.texture.width / 2;\n    this.messages.sachisoft.y = 264;\n\n    // referred to FUN_00405b70\n    this.messages.pikachuVolleyball.x = 140;\n    this.messages.pikachuVolleyball.y = 80;\n    this.messages.pokemon.x = 170;\n    this.messages.pokemon.y = 40;\n\n    this.container = new Container();\n    this.container.addChild(this.sittingPikachuTilesContainer);\n    this.container.addChild(this.messages.pokemon);\n    this.container.addChild(this.messages.pikachuVolleyball);\n    this.container.addChild(this.messages.withWho[0]);\n    this.container.addChild(this.messages.withWho[1]);\n    this.container.addChild(this.messages.sachisoft);\n    this.container.addChild(this.messages.fight);\n    this.initializeVisibles();\n\n    this.sittingPikachuTilesDisplacement = 0;\n    this.selectedWithWho = -1; // 0: with computer, 1: with friend, -1: not selected\n    this.selectedWithWhoMessageSizeIncrement = 2;\n  }\n\n  /** @return {boolean} Is visible? */\n  get visible() {\n    return this.container.visible;\n  }\n\n  /** @param {boolean} bool Is visible? */\n  set visible(bool) {\n    this.container.visible = bool;\n\n    // when turn off view, initialize visibilities of sprites in this view\n    if (bool === false) {\n      this.initializeVisibles();\n    }\n  }\n\n  initializeVisibles() {\n    for (const prop in this.messages) {\n      this.messages[prop].visible = false;\n    }\n  }\n\n  /**\n   * referred to FUN_00405d50\n   * Draw \"fight!\" message which get bigger and smaller as frame goes\n   * @param {number} frameCounter\n   */\n  drawFightMessage(frameCounter) {\n    const sizeArray = [20, 22, 25, 27, 30, 27, 25, 22, 20];\n    const fightMessage = this.messages.fight;\n    const w = fightMessage.texture.width;\n    const h = fightMessage.texture.height;\n\n    if (frameCounter === 0) {\n      fightMessage.visible = true;\n    }\n\n    if (frameCounter < 30) {\n      const halfWidth = Math.floor(Math.floor((frameCounter * w) / 30) / 2);\n      const halfHeight = Math.floor(Math.floor((frameCounter * h) / 30) / 2);\n      fightMessage.width = halfWidth * 2; // width\n      fightMessage.height = halfHeight * 2; // height\n      fightMessage.x = 100 - halfWidth; // x coord\n      fightMessage.y = 70 - halfHeight; // y coord\n    } else {\n      const index = (frameCounter + 1) % 9;\n      // code ...\n      const halfWidth = Math.floor(Math.floor((sizeArray[index] * w) / 30) / 2);\n      const halfHeight = Math.floor(\n        Math.floor((sizeArray[index] * h) / 30) / 2\n      );\n      fightMessage.width = halfWidth * 2; // width\n      fightMessage.height = halfHeight * 2; // height\n      fightMessage.y = 70 - halfHeight; // y coord\n      fightMessage.x = 100 - halfWidth; // x coord\n    }\n  }\n\n  /**\n   * Draw sachisoft message as frame goes\n   * @param {number} frameCounter\n   */\n  drawSachisoft(frameCounter) {\n    if (frameCounter === 0) {\n      this.messages.sachisoft.visible = true;\n      this.messages.sachisoft.alpha = 0;\n    }\n    this.messages.sachisoft.alpha = Math.min(\n      1,\n      this.messages.sachisoft.alpha + 0.04\n    );\n\n    if (frameCounter > 70) {\n      this.messages.sachisoft.alpha = 1;\n    }\n  }\n\n  /**\n   * referred to FUN_00405ca0\n   * Draw sitting pikachu tiles as frame goes\n   * @param {number} frameCounter\n   */\n  drawSittingPikachuTiles(frameCounter) {\n    if (frameCounter === 0) {\n      this.sittingPikachuTilesContainer.visible = true;\n      this.sittingPikachuTilesContainer.alpha = 0;\n    }\n\n    // movement\n    // @ts-ignore\n    const h = this.sittingPikachuTilesContainer.getChildAt(0).texture.height;\n    this.sittingPikachuTilesDisplacement =\n      (this.sittingPikachuTilesDisplacement + 2) % h;\n    this.sittingPikachuTilesContainer.x = -this.sittingPikachuTilesDisplacement;\n    this.sittingPikachuTilesContainer.y = -this.sittingPikachuTilesDisplacement;\n\n    if (frameCounter > 30) {\n      // alpha\n      this.sittingPikachuTilesContainer.alpha = Math.min(\n        1,\n        this.sittingPikachuTilesContainer.alpha + 0.04\n      );\n    }\n\n    if (frameCounter > 70) {\n      this.sittingPikachuTilesContainer.alpha = 1;\n    }\n  }\n\n  /**\n   * referred to FUN_00405b70\n   * Draw pikachu volleyball message as frame goes\n   * @param {number} frameCounter\n   */\n  drawPikachuVolleyballMessage(frameCounter) {\n    if (frameCounter === 0) {\n      this.messages.pikachuVolleyball.visible = false;\n      return;\n    }\n\n    if (frameCounter > 30) {\n      this.messages.pikachuVolleyball.visible = true;\n    }\n\n    if (frameCounter > 30 && frameCounter <= 44) {\n      const xDiff = 195 - 15 * (frameCounter - 30);\n      this.messages.pikachuVolleyball.x = 140 + xDiff;\n    } else if (frameCounter > 44 && frameCounter <= 55) {\n      this.messages.pikachuVolleyball.x = 140;\n      this.messages.pikachuVolleyball.width = 200 - 15 * (frameCounter - 44);\n    } else if (frameCounter > 55 && frameCounter <= 71) {\n      this.messages.pikachuVolleyball.x = 140;\n      this.messages.pikachuVolleyball.width = 40 + 15 * (frameCounter - 55);\n    } else if (frameCounter > 71) {\n      this.messages.pikachuVolleyball.x = 140;\n      this.messages.pikachuVolleyball.width =\n        this.messages.pikachuVolleyball.texture.width;\n    }\n  }\n\n  /**\n   * referred to FUN_00405b70\n   * Draw pokemon message as frame goes\n   * @param {number} frameCounter\n   */\n  drawPokemonMessage(frameCounter) {\n    if (frameCounter === 0) {\n      this.messages.pokemon.visible = false;\n      return;\n    }\n\n    if (frameCounter > 71) {\n      this.messages.pokemon.visible = true;\n    }\n  }\n\n  /**\n   * referred to FUN_00405ec0\n   * Draw with who messages (with computer or with friend) as frame goes\n   * @param {number} frameCounter\n   */\n  drawWithWhoMessages(frameCounter) {\n    const withWho = this.messages.withWho;\n    const w = withWho[0].texture.width;\n    const h = withWho[0].texture.height;\n\n    if (frameCounter === 0) {\n      for (let i = 0; i < 2; i++) {\n        withWho[i].visible = false;\n      }\n      return;\n    }\n\n    if (frameCounter > 70) {\n      if (this.selectedWithWhoMessageSizeIncrement < 10) {\n        this.selectedWithWhoMessageSizeIncrement += 1;\n      }\n      for (let i = 0; i < 2; i++) {\n        const selected = Number(this.selectedWithWho === i); // 1 if selected, 0 otherwise\n        const halfWidthIncrement =\n          selected * (this.selectedWithWhoMessageSizeIncrement + 2);\n        const halfHeightIncrement =\n          selected * this.selectedWithWhoMessageSizeIncrement;\n\n        withWho[i].visible = true;\n        withWho[i].x = 216 - w / 2 - halfWidthIncrement;\n        withWho[i].y = 184 + 30 * i - halfHeightIncrement;\n        withWho[i].width = w + 2 * halfWidthIncrement;\n        withWho[i].height = h + 2 * halfHeightIncrement;\n      }\n    }\n  }\n\n  /**\n   * Select with who for the effect that selected option gets bigger\n   * @param {number} i 0: with computer, 1: with friend\n   */\n  selectWithWho(i) {\n    this.selectedWithWho = i;\n    this.selectedWithWhoMessageSizeIncrement = 2;\n  }\n}\n\n/**\n * Class represent a game view where pikachus, ball, clouds, waves, and backgrounds are\n */\nexport class GameView {\n  /**\n   * Create a GameView object\n   * @param {Object.<string,LoaderResource>} resources\n   */\n  constructor(resources) {\n    const textures = resources[ASSETS_PATH.SPRITE_SHEET].textures;\n\n    // Display objects below\n    this.bgContainer = makeBGContainer(textures);\n    const playerSprites = makePlayerAnimatedSprites(textures);\n    this.player1 = playerSprites[0];\n    this.player2 = playerSprites[1];\n    this.ball = makeBallAnimatedSprites(textures);\n    this.ballHyper = makeSpriteWithAnchorXY(\n      textures,\n      TEXTURES.BALL_HYPER,\n      0.5,\n      0.5\n    );\n    this.ballTrail = makeSpriteWithAnchorXY(\n      textures,\n      TEXTURES.BALL_TRAIL,\n      0.5,\n      0.5\n    );\n    this.punch = makeSpriteWithAnchorXY(\n      textures,\n      TEXTURES.BALL_PUNCH,\n      0.5,\n      0.5\n    );\n\n    // this.scoreBoards[0] for player1, this.scoreBoards[1] for player2\n    this.scoreBoards = [\n      makeScoreBoardSprite(textures),\n      makeScoreBoardSprite(textures),\n    ];\n\n    this.shadows = {\n      forPlayer1: makeSpriteWithAnchorXY(textures, TEXTURES.SHADOW, 0.5, 0.5),\n      forPlayer2: makeSpriteWithAnchorXY(textures, TEXTURES.SHADOW, 0.5, 0.5),\n      forBall: makeSpriteWithAnchorXY(textures, TEXTURES.SHADOW, 0.5, 0.5),\n    };\n\n    this.messages = {\n      gameStart: makeSpriteWithAnchorXY(textures, TEXTURES.GAME_START, 0, 0),\n      ready: makeSpriteWithAnchorXY(textures, TEXTURES.READY, 0, 0),\n      gameEnd: makeSpriteWithAnchorXY(textures, TEXTURES.GAME_END, 0, 0),\n    };\n\n    this.cloudContainer = makeCloudContainer(textures);\n    this.waveContainer = makeWaveContainer(textures);\n\n    // container which include whole display objects\n    // Should be careful on addChild order\n    // The later added, the more front(z-index) on screen\n    this.container = new Container();\n    this.container.addChild(this.bgContainer);\n    this.container.addChild(this.cloudContainer);\n    this.container.addChild(this.waveContainer);\n    this.container.addChild(this.shadows.forPlayer1);\n    this.container.addChild(this.shadows.forPlayer2);\n    this.container.addChild(this.shadows.forBall);\n    this.container.addChild(this.player1);\n    this.container.addChild(this.player2);\n    this.container.addChild(this.ballTrail);\n    this.container.addChild(this.ballHyper);\n    this.container.addChild(this.ball);\n    this.container.addChild(this.punch);\n    this.container.addChild(this.scoreBoards[0]);\n    this.container.addChild(this.scoreBoards[1]);\n    this.container.addChild(this.messages.gameStart);\n    this.container.addChild(this.messages.ready);\n    this.container.addChild(this.messages.gameEnd);\n\n    // location and visibility setting\n    this.bgContainer.x = 0;\n    this.bgContainer.y = 0;\n    this.cloudContainer.x = 0;\n    this.cloudContainer.y = 0;\n    this.waveContainer.x = 0;\n    this.waveContainer.y = 0;\n\n    this.messages.ready.x = 176;\n    this.messages.ready.y = 38;\n    this.scoreBoards[0].x = 14; // score board is 14 pixel distant from boundary\n    this.scoreBoards[0].y = 10;\n    this.scoreBoards[1].x = 432 - 32 - 32 - 14; // 32 pixel is for number (32x32px) width; one score board has two numbers\n    this.scoreBoards[1].y = 10;\n\n    this.shadows.forPlayer1.y = 273;\n    this.shadows.forPlayer2.y = 273;\n    this.shadows.forBall.y = 273;\n\n    this.initializeVisibles();\n\n    // clouds and wave model.\n    // This model is included in this view object, not on controller object\n    // since it is not dependent on user input, and only used for rendering.\n    this.cloudArray = [];\n    for (let i = 0; i < NUM_OF_CLOUDS; i++) {\n      this.cloudArray.push(new Cloud());\n    }\n    this.wave = new Wave();\n  }\n\n  /** @return {boolean} Is visible? */\n  get visible() {\n    return this.container.visible;\n  }\n\n  /** @param {boolean} bool Is visible? */\n  set visible(bool) {\n    this.container.visible = bool;\n\n    // when turn off view\n    if (bool === false) {\n      this.initializeVisibles();\n    }\n  }\n\n  initializeVisibles() {\n    for (const prop in this.messages) {\n      this.messages[prop].visible = false;\n    }\n  }\n\n  /** @typedef {import(\"./physics\").PikaPhysics} PikaPhysics */\n  /**\n   * Draw players and ball in the given physics object\n   * @param {PikaPhysics} physics PikaPhysics object to draw\n   */\n  drawPlayersAndBall(physics) {\n    const player1 = physics.player1;\n    const player2 = physics.player2;\n    const ball = physics.ball;\n\n    this.player1.x = player1.x;\n    this.player1.y = player1.y;\n    if (player1.state === 3 || player1.state === 4) {\n      this.player1.scale.x = player1.divingDirection === -1 ? -1 : 1;\n    } else {\n      this.player1.scale.x = 1;\n    }\n    this.shadows.forPlayer1.x = player1.x;\n\n    this.player2.x = player2.x;\n    this.player2.y = player2.y;\n    if (player2.state === 3 || player2.state === 4) {\n      this.player2.scale.x = player2.divingDirection === 1 ? 1 : -1;\n    } else {\n      this.player2.scale.x = -1;\n    }\n    this.shadows.forPlayer2.x = player2.x;\n\n    const frameNumber1 = getFrameNumberForPlayerAnimatedSprite(\n      player1.state,\n      player1.frameNumber\n    );\n    const frameNumber2 = getFrameNumberForPlayerAnimatedSprite(\n      player2.state,\n      player2.frameNumber\n    );\n    this.player1.gotoAndStop(frameNumber1);\n    this.player2.gotoAndStop(frameNumber2);\n\n    this.ball.x = ball.x;\n    this.ball.y = ball.y;\n    this.shadows.forBall.x = ball.x;\n    this.ball.gotoAndStop(ball.rotation);\n\n    // For punch effect, refer FUN_00402ee0\n    if (ball.punchEffectRadius > 0) {\n      ball.punchEffectRadius -= 2;\n      this.punch.width = 2 * ball.punchEffectRadius;\n      this.punch.height = 2 * ball.punchEffectRadius;\n      this.punch.x = ball.punchEffectX;\n      this.punch.y = ball.punchEffectY;\n      this.punch.visible = true;\n    } else {\n      this.punch.visible = false;\n    }\n\n    if (ball.isPowerHit === true) {\n      this.ballHyper.x = ball.previousX;\n      this.ballHyper.y = ball.previousY;\n      this.ballTrail.x = ball.previousPreviousX;\n      this.ballTrail.y = ball.previousPreviousY;\n\n      this.ballHyper.visible = true;\n      this.ballTrail.visible = true;\n    } else {\n      this.ballHyper.visible = false;\n      this.ballTrail.visible = false;\n    }\n  }\n\n  /**\n   * Draw scores to each score board\n   * @param {number[]} scores [0] for player1 score, [1] for player2 score\n   */\n  drawScoresToScoreBoards(scores) {\n    for (let i = 0; i < 2; i++) {\n      const scoreBoard = this.scoreBoards[i];\n      const score = scores[i];\n      const unitsAnimatedSprite = scoreBoard.getChildAt(0);\n      const tensAnimatedSprite = scoreBoard.getChildAt(1);\n      // @ts-ignore\n      unitsAnimatedSprite.gotoAndStop(score % 10);\n      // @ts-ignore\n      tensAnimatedSprite.gotoAndStop(Math.floor(score / 10) % 10);\n      if (score >= 10) {\n        tensAnimatedSprite.visible = true;\n      } else {\n        tensAnimatedSprite.visible = false;\n      }\n    }\n  }\n\n  /**\n   * Draw clouds and wave\n   */\n  drawCloudsAndWave() {\n    const cloudArray = this.cloudArray;\n    const wave = this.wave;\n\n    cloudAndWaveEngine(cloudArray, wave);\n\n    for (let i = 0; i < NUM_OF_CLOUDS; i++) {\n      const cloud = cloudArray[i];\n      const cloudSprite = this.cloudContainer.getChildAt(i);\n      cloudSprite.x = cloud.spriteTopLeftPointX;\n      cloudSprite.y = cloud.spriteTopLeftPointY;\n      // @ts-ignore\n      cloudSprite.width = cloud.spriteWidth;\n      // @ts-ignore\n      cloudSprite.height = cloud.spriteHeight;\n    }\n\n    for (let i = 0; i < 432 / 16; i++) {\n      const waveSprite = this.waveContainer.getChildAt(i);\n      waveSprite.y = wave.yCoords[i];\n    }\n  }\n\n  /**\n   * refered FUN_00403f20\n   * Draw game start message as frame goes\n   * @param {number} frameCounter current frame number\n   * @param {number} frameTotal total frame number for game start message\n   */\n  drawGameStartMessage(frameCounter, frameTotal) {\n    if (frameCounter === 0) {\n      this.messages.gameStart.visible = true;\n    } else if (frameCounter >= frameTotal - 1) {\n      this.messages.gameStart.visible = false;\n      return;\n    }\n\n    const gameStartMessage = this.messages.gameStart;\n    // game start message rendering\n    const w = gameStartMessage.texture.width; // game start message texture width\n    const h = gameStartMessage.texture.height; // game start message texture height\n    const halfWidth = Math.floor((w * frameCounter) / 50);\n    const halfHeight = Math.floor((h * frameCounter) / 50);\n    gameStartMessage.x = 216 - halfWidth;\n    gameStartMessage.y = 50 + 2 * halfHeight;\n    gameStartMessage.width = 2 * halfWidth;\n    gameStartMessage.height = 2 * halfHeight;\n  }\n\n  /**\n   * Draw ready message\n   * @param {boolean} bool turn on?\n   */\n  drawReadyMessage(bool) {\n    this.messages.ready.visible = bool;\n  }\n\n  /**\n   * Togle ready message.\n   * Turn off if it's on, turn on if it's off.\n   */\n  toggleReadyMessage() {\n    this.messages.ready.visible = !this.messages.ready.visible;\n  }\n\n  /**\n   * refered FUN_00404070\n   * Draw game end message as frame goes\n   * @param {number} frameCounter\n   */\n  drawGameEndMessage(frameCounter) {\n    const gameEndMessage = this.messages.gameEnd;\n    const w = gameEndMessage.texture.width; // game end message texture width;\n    const h = gameEndMessage.texture.height; // game end message texture height;\n\n    if (frameCounter === 0) {\n      gameEndMessage.visible = true;\n    }\n    if (frameCounter < 50) {\n      const halfWidthIncrement = 2 * Math.floor(((50 - frameCounter) * w) / 50);\n      const halfHeightIncrement =\n        2 * Math.floor(((50 - frameCounter) * h) / 50);\n\n      gameEndMessage.x = 216 - w / 2 - halfWidthIncrement;\n      gameEndMessage.y = 50 - halfHeightIncrement;\n      gameEndMessage.width = w + 2 * halfWidthIncrement;\n      gameEndMessage.height = h + 2 * halfHeightIncrement;\n    } else {\n      gameEndMessage.x = 216 - w / 2;\n      gameEndMessage.y = 50;\n      gameEndMessage.width = w;\n      gameEndMessage.height = h;\n    }\n  }\n}\n\n/**\n * Class representing fade in out effect\n */\nexport class FadeInOut {\n  constructor(resources) {\n    const textures = resources[ASSETS_PATH.SPRITE_SHEET].textures;\n    this.black = makeSpriteWithAnchorXY(textures, TEXTURES.BLACK, 0, 0);\n    this.black.width = 432;\n    this.black.height = 304;\n    this.black.x = 0;\n    this.black.y = 0;\n    this.black.alpha = 1;\n  }\n\n  /** @return {boolean} Is visible? */\n  get visible() {\n    return this.black.visible;\n  }\n\n  /** @param {boolean} bool Is visible? */\n  set visible(bool) {\n    this.black.visible = bool;\n  }\n\n  /**\n   * Set black alpha for fade in out\n   * @param {number} alpha number in [0, 1]\n   */\n  setBlackAlphaTo(alpha) {\n    this.black.alpha = alpha;\n    if (this.black.alpha === 0) {\n      this.black.visible = false;\n    } else {\n      this.black.visible = true;\n    }\n  }\n\n  /**\n   * Increase black alpha for fade in out\n   * @param {number} alphaIncrement if alphaIncrement > 0: fade out, else fade in\n   */\n  changeBlackAlphaBy(alphaIncrement) {\n    if (alphaIncrement >= 0) {\n      this.black.alpha = Math.min(1, this.black.alpha + alphaIncrement);\n    } else {\n      this.black.alpha = Math.max(0, this.black.alpha + alphaIncrement);\n    }\n    if (this.black.alpha === 0) {\n      this.black.visible = false;\n    } else {\n      this.black.visible = true;\n    }\n  }\n}\n\n/**\n * Make sitting pikachu tiles\n * @param {Object.<string,Texture>} textures\n * @return {Container}\n */\nfunction makeSittingPikachuTilesContainer(textures) {\n  const container = new Container();\n  const texture = textures[TEXTURES.SITTING_PIKACHU];\n  const w = texture.width;\n  const h = texture.height;\n\n  let tile;\n  for (let j = 0; j < Math.floor(304 / h) + 2; j++) {\n    for (let i = 0; i < Math.floor(432 / w) + 2; i++) {\n      tile = new Sprite(texture);\n      addChildToParentAndSetLocalPosition(container, tile, w * i, h * j);\n    }\n  }\n\n  return container;\n}\n\n/**\n * Make background\n * @param {Object.<string,Texture>} textures\n * @return {Container}\n */\nfunction makeBGContainer(textures) {\n  const bgContainer = new Container();\n\n  // sky\n  let tile;\n  let texture = textures[TEXTURES.SKY_BLUE];\n  for (let j = 0; j < 12; j++) {\n    for (let i = 0; i < 432 / 16; i++) {\n      tile = new Sprite(texture);\n      addChildToParentAndSetLocalPosition(bgContainer, tile, 16 * i, 16 * j);\n    }\n  }\n\n  // mountain\n  texture = textures[TEXTURES.MOUNTAIN];\n  tile = new Sprite(texture);\n  addChildToParentAndSetLocalPosition(bgContainer, tile, 0, 188);\n\n  // ground_red\n  texture = textures[TEXTURES.GROUND_RED];\n  for (let i = 0; i < 432 / 16; i++) {\n    tile = new Sprite(texture);\n    addChildToParentAndSetLocalPosition(bgContainer, tile, 16 * i, 248);\n  }\n\n  // ground_line\n  texture = textures[TEXTURES.GROUND_LINE];\n  for (let i = 1; i < 432 / 16 - 1; i++) {\n    tile = new Sprite(texture);\n    addChildToParentAndSetLocalPosition(bgContainer, tile, 16 * i, 264);\n  }\n  texture = textures[TEXTURES.GROUND_LINE_LEFT_MOST];\n  tile = new Sprite(texture);\n  addChildToParentAndSetLocalPosition(bgContainer, tile, 0, 264);\n  texture = textures[TEXTURES.GROUND_LINE_RIGHT_MOST];\n  tile = new Sprite(texture);\n  addChildToParentAndSetLocalPosition(bgContainer, tile, 432 - 16, 264);\n\n  // ground_yellow\n  texture = textures[TEXTURES.GROUND_YELLOW];\n  for (let j = 0; j < 2; j++) {\n    for (let i = 0; i < 432 / 16; i++) {\n      tile = new Sprite(texture);\n      addChildToParentAndSetLocalPosition(\n        bgContainer,\n        tile,\n        16 * i,\n        280 + 16 * j\n      );\n    }\n  }\n\n  // net pillar\n  texture = textures[TEXTURES.NET_PILLAR_TOP];\n  tile = new Sprite(texture);\n  addChildToParentAndSetLocalPosition(bgContainer, tile, 213, 176);\n  texture = textures[TEXTURES.NET_PILLAR];\n  for (let j = 0; j < 12; j++) {\n    tile = new Sprite(texture);\n    addChildToParentAndSetLocalPosition(bgContainer, tile, 213, 184 + 8 * j);\n  }\n\n  return bgContainer;\n}\n\n/**\n * Make animated sprites for both players\n * @param {Object.<string,Texture>} textures\n * @return {AnimatedSprite[]} [0] for player 1, [1] for player2\n */\nfunction makePlayerAnimatedSprites(textures) {\n  const getPlayerTexture = (i, j) => textures[TEXTURES.PIKACHU(i, j)];\n  const playerTextureArray = [];\n  for (let i = 0; i < 7; i++) {\n    if (i === 3) {\n      playerTextureArray.push(getPlayerTexture(i, 0));\n      playerTextureArray.push(getPlayerTexture(i, 1));\n    } else if (i === 4) {\n      playerTextureArray.push(getPlayerTexture(i, 0));\n    } else {\n      for (let j = 0; j < 5; j++) {\n        playerTextureArray.push(getPlayerTexture(i, j));\n      }\n    }\n  }\n  const player1AnimatedSprite = new AnimatedSprite(playerTextureArray, false);\n  const player2AnimatedSprite = new AnimatedSprite(playerTextureArray, false);\n\n  player1AnimatedSprite.anchor.x = 0.5;\n  player1AnimatedSprite.anchor.y = 0.5;\n  player2AnimatedSprite.anchor.x = 0.5;\n  player2AnimatedSprite.anchor.y = 0.5;\n\n  return [player1AnimatedSprite, player2AnimatedSprite];\n}\n\n/**\n * Make animated sprite of ball\n * @param {Object.<string,Texture>} textures\n * @return {AnimatedSprite}\n */\nfunction makeBallAnimatedSprites(textures) {\n  const getBallTexture = (s) => textures[TEXTURES.BALL(s)];\n  const ballTextureArray = [\n    getBallTexture(0),\n    getBallTexture(1),\n    getBallTexture(2),\n    getBallTexture(3),\n    getBallTexture(4),\n    getBallTexture('hyper'),\n  ];\n  const ballAnimatedSprite = new AnimatedSprite(ballTextureArray, false);\n\n  ballAnimatedSprite.anchor.x = 0.5;\n  ballAnimatedSprite.anchor.y = 0.5;\n\n  return ballAnimatedSprite;\n}\n\n/**\n * Make sprite with the texture on the path and with the given anchor x, y\n * @param {Object.<string,Texture>} textures\n * @param {string} path\n * @param {number} anchorX anchor.x, number in [0, 1]\n * @param {number} anchorY anchor.y, number in [0, 1]\n * @return {Sprite}\n */\nfunction makeSpriteWithAnchorXY(textures, path, anchorX, anchorY) {\n  const sprite = new Sprite(textures[path]);\n  sprite.anchor.x = anchorX;\n  sprite.anchor.y = anchorY;\n  return sprite;\n}\n\n/**\n * Make score boards\n * @param {Object.<string,Texture>} textures\n * @return {Container} child with index 0 for player 1 score board, child with index 1 for player2 score board\n */\nfunction makeScoreBoardSprite(textures) {\n  const getNumberTexture = (n) => textures[TEXTURES.NUMBER(n)];\n  const numberTextureArray = [];\n  for (let i = 0; i < 10; i++) {\n    numberTextureArray.push(getNumberTexture(i));\n  }\n  const numberAnimatedSprites = [null, null];\n  numberAnimatedSprites[0] = new AnimatedSprite(numberTextureArray, false);\n  numberAnimatedSprites[1] = new AnimatedSprite(numberTextureArray, false);\n\n  const scoreBoard = new Container();\n  addChildToParentAndSetLocalPosition(\n    scoreBoard,\n    numberAnimatedSprites[0],\n    32,\n    0\n  ); // for units\n  addChildToParentAndSetLocalPosition(\n    scoreBoard,\n    numberAnimatedSprites[1],\n    0,\n    0\n  ); // for tens\n\n  scoreBoard.setChildIndex(numberAnimatedSprites[0], 0); // for units\n  scoreBoard.setChildIndex(numberAnimatedSprites[1], 1); // for tens\n\n  return scoreBoard;\n}\n\n/**\n * Make a container with cloud sprites\n * @param {Object.<string,Texture>} textures\n * @return {Container}\n */\nfunction makeCloudContainer(textures) {\n  const cloudContainer = new Container();\n  const texture = textures[TEXTURES.CLOUD];\n  for (let i = 0; i < NUM_OF_CLOUDS; i++) {\n    const cloud = new Sprite(texture);\n    cloud.anchor.x = 0;\n    cloud.anchor.y = 0;\n    cloudContainer.addChild(cloud);\n  }\n\n  return cloudContainer;\n}\n\n/**\n * Make a container with wave sprites\n * @param {Object.<string,Texture>} textures\n * @return {Container}\n */\nfunction makeWaveContainer(textures) {\n  const waveContainer = new Container();\n  const texture = textures[TEXTURES.WAVE];\n  for (let i = 0; i < 432 / 16; i++) {\n    const tile = new Sprite(texture);\n    addChildToParentAndSetLocalPosition(waveContainer, tile, 16 * i, 0);\n  }\n\n  return waveContainer;\n}\n\n/**\n * Add child to parent and set local position\n * @param {Container} parent\n * @param {Sprite} child\n * @param {number} x local x\n * @param {number} y local y\n */\nfunction addChildToParentAndSetLocalPosition(parent, child, x, y) {\n  parent.addChild(child);\n  child.anchor.x = 0;\n  child.anchor.y = 0;\n  child.x = x;\n  child.y = y;\n}\n\n/**\n * Get frame number for player animated sprite corresponds to the player state\n *\n * number of frames for state 0, state 1 and state 2 is 5 for each.\n * number of frames for state 3 is 2.\n * number of frames for state 4 is 1.\n * number of frames for state 5, state 6 is 5 for each.\n * @param {number} state player state\n * @param {number} frameNumber\n */\nfunction getFrameNumberForPlayerAnimatedSprite(state, frameNumber) {\n  if (state < 4) {\n    return 5 * state + frameNumber;\n  } else if (state === 4) {\n    return 17 + frameNumber;\n  } else if (state > 4) {\n    return 18 + 5 * (state - 5) + frameNumber;\n  }\n}\n","/**\n * This module takes charge of the user input via keyboard\n */\n'use strict';\nimport { PikaUserInput } from './physics.js';\n\n/**\n * Class representing a keyboard used to control a player\n */\nexport class PikaKeyboard extends PikaUserInput {\n  constructor(left, right, up, down, powerHit, downRight = null, extraKeys = []) {\n    super();\n\n    /** @type {boolean} */\n    this.powerHitKeyIsDownPrevious = false;\n\n    /** @type {Key[]} 기본 키 설정 */\n    this.keys = [\n      new Key(left), new Key(right), new Key(up), new Key(down), new Key(powerHit),\n    ];\n\n    /** @type {Key[]} 추가 키 설정 (D, F, R, G, V, Z 등) */\n      this.extraKeys = Array.isArray(extraKeys) ? extraKeys.map(key => new Key(key)) : [];  // ✅ extraKeys가 배열이 아닐 경우 빈 배열로 설정\n  }\n\n getInput(amIPlayer2 = false) {\n    let leftPressed = this.keys[0].isDown || this.extraKeys.some(key => key.value === 'KeyD' && key.isDown);  // ✅ D 키 → 왼쪽 이동\n    let rightPressed = this.keys[1].isDown || this.extraKeys.some(key => key.value === 'KeyG' && key.isDown);  // ✅ G 키 → 오른쪽 이동\n    let upPressed = this.keys[2].isDown || this.extraKeys.some(key => key.value === 'KeyR' && key.isDown);\n    let downPressed = this.keys[3]?.isDown || this.extraKeys.some(key => key.isDown && ['KeyV', 'KeyF', 'ArrowDown'].includes(key.value));\n    let powerHitPressed = this.keys[4].isDown || this.extraKeys.some(key => key.value === 'KeyZ' && key.isDown);\n\n    this.xDirection = leftPressed ? -1 : rightPressed ? 1 : 0;\n    this.yDirection = upPressed ? -1 : downPressed ? 1 : 0;\n\n    const isDown = powerHitPressed;\n    this.powerHit = !this.powerHitKeyIsDownPrevious && isDown ? 1 : 0;\n    this.powerHitKeyIsDownPrevious = isDown;\n}\n\n\n  /**\n   * Subscribe keydown, keyup event listeners for the keys of this keyboard\n   */\n  subscribe() {\n      this.keys.forEach(key => key.subscribe());  // ✅ 모든 기본 키에 대해 subscribe() 실행\n      this.extraKeys.forEach(key => key.subscribe());  // ✅ 추가된 키들도 subscribe() 실행\n      \n      if (this.downRightKey) { // ✅ downRightKey가 존재할 때만 실행하도록 조건 추가\n          this.downRightKey.subscribe();\n      }\n  }\n\n  /**\n   * Unsubscribe keydown, keyup event listeners for the keys of this keyboard\n   */\n  unsubscribe() {\n      this.keys.forEach(key => key.unsubscribe());  // ✅ 모든 기본 키 unsubscribe() 실행\n      this.extraKeys.forEach(key => key.unsubscribe());  // ✅ 추가된 키들도 unsubscribe() 실행\n\n      if (this.downRightKey) {\n          this.downRightKey.unsubscribe();  // ✅ downRightKey가 존재하는 경우만 unsubscribe 실행\n      }\n  }\n}\n\n/**\n * Class representing a key on a keyboard\n * referred to: https://github.com/kittykatattack/learningPixi\n */\nclass Key {\n  /**\n   * Create a key\n   * Refer {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values}\n   * @param {string} value KeyboardEvent.code value of this key\n   */\n  constructor(value) {\n    this.value = value;\n    this.isDown = false;\n    this.isUp = true;\n\n    this.downListener = this.downHandler.bind(this);\n    this.upListener = this.upHandler.bind(this);\n    this.subscribe();\n  }\n\n  /**\n   * When key downed\n   * @param {KeyboardEvent} event\n   */\n  downHandler(event) {\n    if (event.code === this.value) {\n      this.isDown = true;\n      this.isUp = false;\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * When key upped\n   * @param {KeyboardEvent} event\n   */\n  upHandler(event) {\n    if (event.code === this.value) {\n      this.isDown = false;\n      this.isUp = true;\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Subscribe event listeners\n   */\n  subscribe() {\n    // I think an event listener for keyup should be attached\n    // before the one for keydown to prevent a buggy behavior.\n    // If keydown event listener were attached first and\n    // a key was downed and upped before keyup event listener were attached,\n    // I think the value of this.isDown would be true (and the value of this.isUp would be false)\n    // for a while before the user press this key again.\n    window.addEventListener('keyup', this.upListener);\n    window.addEventListener('keydown', this.downListener);\n  }\n\n  /**\n   * Unsubscribe event listeners\n   */\n  unsubscribe() {\n    window.removeEventListener('keydown', this.downListener);\n    window.removeEventListener('keyup', this.upListener);\n    this.isDown = false;\n    this.isUp = true;\n  }\n}\n","/**\n * This module takes charge of the game audio (or sounds)\n */\n'use strict';\nimport { sound, Sound, filters } from '@pixi/sound';\nimport { ASSETS_PATH } from './assets_path.js';\n\nconst SOUNDS = ASSETS_PATH.SOUNDS;\n\n/** @typedef {import('@pixi/loaders').LoaderResource} LoaderResource */\n\n/**\n * Class representing audio\n */\nexport class PikaAudio {\n  /**\n   * Create a PikaAudio object\n   * @param {Object.<string,LoaderResource>} resources loader.resources\n   */\n  constructor(resources) {\n    /** @type {Object.<string,PikaStereoSound>} sounds pack */\n    this.sounds = {\n      bgm: new PikaStereoSound(resources[SOUNDS.BGM].sound),\n      pipikachu: new PikaStereoSound(resources[SOUNDS.PIPIKACHU].sound),\n      pika: new PikaStereoSound(resources[SOUNDS.PIKA].sound),\n      chu: new PikaStereoSound(resources[SOUNDS.CHU].sound),\n      pi: new PikaStereoSound(resources[SOUNDS.PI].sound),\n      pikachu: new PikaStereoSound(resources[SOUNDS.PIKACHU].sound),\n      powerHit: new PikaStereoSound(resources[SOUNDS.POWERHIT].sound),\n      ballTouchesGround: new PikaStereoSound(\n        resources[SOUNDS.BALLTOUCHESGROUND].sound\n      ),\n    };\n\n    this.sounds.bgm.loop = true;\n    /** @constant @type {number} proper bgm volume */\n    this.properBGMVolume = 0.2;\n    /** @constant @type {number} proper sfx volume */\n    this.properSFXVolume = 0.35;\n    this.adjustVolume();\n  }\n\n  /**\n   * Adjust audio volume\n   */\n  adjustVolume() {\n    for (const prop in this.sounds) {\n      if (prop === 'bgm') {\n        this.sounds[prop].volume = this.properBGMVolume;\n      } else {\n        this.sounds[prop].volume = this.properSFXVolume;\n      }\n    }\n  }\n\n  /**\n   * turn BGM volume\n   * @param {boolean} turnOn turnOn? turnOff\n   */\n  turnBGMVolume(turnOn) {\n    let volume;\n    if (turnOn) {\n      volume = this.properBGMVolume;\n    } else {\n      volume = 0;\n    }\n    this.sounds.bgm.volume = volume;\n  }\n\n  /**\n   * turn SFX volume\n   * @param {boolean} turnOn turnOn? turnOff\n   */\n  turnSFXVolume(turnOn) {\n    let volume;\n    if (turnOn) {\n      volume = this.properSFXVolume;\n    } else {\n      volume = 0;\n    }\n    for (const prop in this.sounds) {\n      if (prop !== 'bgm') {\n        this.sounds[prop].volume = volume;\n      }\n    }\n  }\n\n  muteAll() {\n    sound.muteAll();\n  }\n\n  unmuteAll() {\n    sound.unmuteAll();\n  }\n}\n\n/**\n * Class representing a stereo sound\n */\nclass PikaStereoSound {\n  /**\n   * create a PikaStereoSound object\n   * @param {Sound} sound\n   */\n  constructor(sound) {\n    this.center = sound;\n    this.left = Sound.from(sound.url);\n    this.right = Sound.from(sound.url);\n\n    const centerPanning = new filters.StereoFilter(0);\n    const leftPanning = new filters.StereoFilter(-0.75);\n    const rightPanning = new filters.StereoFilter(0.75);\n    this.center.filters = [centerPanning];\n    this.left.filters = [leftPanning];\n    this.right.filters = [rightPanning];\n  }\n\n  /**\n   * @param {number} v volume: number in [0, 1]\n   */\n  set volume(v) {\n    this.center.volume = v;\n    this.left.volume = v;\n    this.right.volume = v;\n  }\n\n  /**\n   * @param {boolean} bool\n   */\n  set loop(bool) {\n    this.center.loop = bool;\n    this.left.loop = bool;\n    this.right.loop = bool;\n  }\n\n  /**\n   * play this stereo sound\n   * @param {number} leftOrCenterOrRight -1: left, 0: center, 1: right\n   */\n  play(leftOrCenterOrRight = 0) {\n    if (leftOrCenterOrRight === 0) {\n      this.center.play();\n    } else if (leftOrCenterOrRight === -1) {\n      this.left.play();\n    } else if (leftOrCenterOrRight === 1) {\n      this.right.play();\n    }\n  }\n\n  /**\n   * stop this stereo sound\n   */\n  stop() {\n    this.center.stop();\n    this.left.stop();\n    this.right.stop();\n  }\n}\n","/**\n * The Controller part in MVC pattern\n */\n'use strict';\nimport { GROUND_HALF_WIDTH, PikaPhysics } from './physics.js';\nimport { MenuView, GameView, FadeInOut, IntroView } from './view.js';\nimport { PikaKeyboard } from './keyboard.js';\nimport { PikaAudio } from './audio.js';\n\n/** @typedef {import('@pixi/display').Container} Container */\n/** @typedef {import('@pixi/loaders').LoaderResource} LoaderResource */\n\n/** @typedef GameState @type {function():void} */\n\n/**\n * Class representing Pikachu Volleyball game\n */\nexport class PikachuVolleyball {\n  /**\n   * Create a Pikachu Volleyball game which includes physics, view, audio\n   * @param {Container} stage container which is rendered by PIXI.Renderer or PIXI.CanvasRenderer\n   * @param {Object.<string,LoaderResource>} resources resources property of the PIXI.Loader object which is used for loading the game resources\n   */\n  constructor(stage, resources) {\n    this.view = {\n      intro: new IntroView(resources),\n      menu: new MenuView(resources),\n      game: new GameView(resources),\n      fadeInOut: new FadeInOut(resources),\n    };\n    stage.addChild(this.view.intro.container);\n    stage.addChild(this.view.menu.container);\n    stage.addChild(this.view.game.container);\n    stage.addChild(this.view.fadeInOut.black);\n    this.view.intro.visible = false;\n    this.view.menu.visible = false;\n    this.view.game.visible = false;\n    this.view.fadeInOut.visible = false;\n\n    this.audio = new PikaAudio(resources);\n    this.physics = new PikaPhysics(true, true);\n    this.keyboardArray = [\n      new PikaKeyboard('KeyD', 'KeyG', 'KeyR', 'KeyV', 'KeyZ', 'KeyF'), // for player1\n      new PikaKeyboard( // for player2\n        'ArrowLeft',\n        'ArrowRight',\n        'ArrowUp',\n        'ArrowDown',\n        'Enter'\n      ),\n    ];\n\n    /** @type {number} game fps */\n    this.normalFPS = 25;\n    /** @type {number} fps for slow motion */\n    this.slowMotionFPS = 5;\n\n    /** @constant @type {number} number of frames for slow motion */\n    this.SLOW_MOTION_FRAMES_NUM = 6;\n    /** @type {number} number of frames left for slow motion */\n    this.slowMotionFramesLeft = 0;\n    /** @type {number} number of elapsed normal fps frames for rendering slow motion */\n    this.slowMotionNumOfSkippedFrames = 0;\n\n    /** @type {number} 0: with computer, 1: with friend */\n    this.selectedWithWho = 0;\n\n    /** @type {number[]} [0] for player 1 score, [1] for player 2 score */\n    this.scores = [0, 0];\n    /** @type {number} winning score: if either one of the players reaches this score, game ends */\n    this.winningScore = 15;\n\n    /** @type {boolean} Is the game ended? */\n    this.gameEnded = false;\n    /** @type {boolean} Is the round ended? */\n    this.roundEnded = false;\n    /** @type {boolean} Will player 2 serve? */\n    this.isPlayer2Serve = false;\n\n    /** @type {number} frame counter */\n    this.frameCounter = 0;\n    /** @type {Object.<string,number>} total number of frames for each game state */\n    this.frameTotal = {\n      intro: 165,\n      afterMenuSelection: 15,\n      beforeStartOfNewGame: 15,\n      startOfNewGame: 71,\n      afterEndOfRound: 5,\n      beforeStartOfNextRound: 30,\n      gameEnd: 211,\n    };\n\n    /** @type {number} counter for frames while there is no input from keyboard */\n    this.noInputFrameCounter = 0;\n    /** @type {Object.<string,number>} total number of frames to be rendered while there is no input */\n    this.noInputFrameTotal = {\n      menu: 225,\n    };\n\n    /** @type {boolean} true: paused, false: not paused */\n    this.paused = false;\n\n    /** @type {boolean} true: stereo, false: mono */\n    this.isStereoSound = true;\n\n    /** @type {boolean} true: practice mode on, false: practice mode off */\n    this._isPracticeMode = false;\n\n    /**\n     * The game state which is being rendered now\n     * @type {GameState}\n     */\n    this.state = this.intro;\n  }\n\n  /**\n   * Game loop\n   * This function should be called at regular intervals ( interval = (1 / FPS) second )\n   */\n  gameLoop() {\n    if (this.paused === true) {\n      return;\n    }\n    if (this.slowMotionFramesLeft > 0) {\n      this.slowMotionNumOfSkippedFrames++;\n      if (\n        this.slowMotionNumOfSkippedFrames %\n          Math.round(this.normalFPS / this.slowMotionFPS) !==\n        0\n      ) {\n        return;\n      }\n      this.slowMotionFramesLeft--;\n      this.slowMotionNumOfSkippedFrames = 0;\n    }\n    // catch keyboard input and freeze it\n    this.keyboardArray[0].getInput();\n    this.keyboardArray[1].getInput();\n    this.state();\n  }\n\n  /**\n   * Intro: a man with a brief case\n   * @type {GameState}\n   */\n  intro() {\n    if (this.frameCounter === 0) {\n      this.view.intro.visible = true;\n      this.view.fadeInOut.setBlackAlphaTo(0);\n      this.audio.sounds.bgm.stop();\n    }\n    this.view.intro.drawMark(this.frameCounter);\n    this.frameCounter++;\n\n    if (\n      this.keyboardArray[0].powerHit === 1 ||\n      this.keyboardArray[1].powerHit === 1\n    ) {\n      this.frameCounter = 0;\n      this.view.intro.visible = false;\n      this.state = this.menu;\n    }\n\n    if (this.frameCounter >= this.frameTotal.intro) {\n      this.frameCounter = 0;\n      this.view.intro.visible = false;\n      this.state = this.menu;\n    }\n  }\n\n  /**\n   * Menu: select who do you want to play. With computer? With friend?\n   * @type {GameState}\n   */\n  menu() {\n    if (this.frameCounter === 0) {\n      this.view.menu.visible = true;\n      this.view.fadeInOut.setBlackAlphaTo(0);\n      this.selectedWithWho = 0;\n      this.view.menu.selectWithWho(this.selectedWithWho);\n    }\n    this.view.menu.drawFightMessage(this.frameCounter);\n    this.view.menu.drawSachisoft(this.frameCounter);\n    this.view.menu.drawSittingPikachuTiles(this.frameCounter);\n    this.view.menu.drawPikachuVolleyballMessage(this.frameCounter);\n    this.view.menu.drawPokemonMessage(this.frameCounter);\n    this.view.menu.drawWithWhoMessages(this.frameCounter);\n    this.frameCounter++;\n\n    if (\n      this.frameCounter < 71 &&\n      (this.keyboardArray[0].powerHit === 1 ||\n        this.keyboardArray[1].powerHit === 1)\n    ) {\n      this.frameCounter = 71;\n      return;\n    }\n\n    if (this.frameCounter <= 71) {\n      return;\n    }\n\n    if (\n      (this.keyboardArray[0].yDirection === -1 ||\n        this.keyboardArray[1].yDirection === -1) &&\n      this.selectedWithWho === 1\n    ) {\n      this.noInputFrameCounter = 0;\n      this.selectedWithWho = 0;\n      this.view.menu.selectWithWho(this.selectedWithWho);\n      this.audio.sounds.pi.play();\n    } else if (\n      (this.keyboardArray[0].yDirection === 1 ||\n        this.keyboardArray[1].yDirection === 1) &&\n      this.selectedWithWho === 0\n    ) {\n      this.noInputFrameCounter = 0;\n      this.selectedWithWho = 1;\n      this.view.menu.selectWithWho(this.selectedWithWho);\n      this.audio.sounds.pi.play();\n    } else {\n      this.noInputFrameCounter++;\n    }\n\n    if (\n      this.keyboardArray[0].powerHit === 1 ||\n      this.keyboardArray[1].powerHit === 1\n    ) {\n      if (this.selectedWithWho === 1) {\n        this.physics.player1.isComputer = false;\n        this.physics.player2.isComputer = false;\n      } else {\n        if (this.keyboardArray[0].powerHit === 1) {\n          this.physics.player1.isComputer = false;\n          this.physics.player2.isComputer = true;\n        } else if (this.keyboardArray[1].powerHit === 1) {\n          this.physics.player1.isComputer = true;\n          this.physics.player2.isComputer = false;\n        }\n      }\n      this.audio.sounds.pikachu.play();\n      this.frameCounter = 0;\n      this.noInputFrameCounter = 0;\n      this.state = this.afterMenuSelection;\n      return;\n    }\n\n    if (this.noInputFrameCounter >= this.noInputFrameTotal.menu) {\n      this.physics.player1.isComputer = true;\n      this.physics.player2.isComputer = true;\n      this.frameCounter = 0;\n      this.noInputFrameCounter = 0;\n      this.state = this.afterMenuSelection;\n    }\n  }\n\n  /**\n   * Fade out after menu selection\n   * @type {GameState}\n   */\n  afterMenuSelection() {\n    this.view.fadeInOut.changeBlackAlphaBy(1 / 16);\n    this.frameCounter++;\n    if (this.frameCounter >= this.frameTotal.afterMenuSelection) {\n      this.frameCounter = 0;\n      this.state = this.beforeStartOfNewGame;\n    }\n  }\n\n  /**\n   * Delay before start of new game (This is for the delay that exist in the original game)\n   * @type {GameState}\n   */\n  beforeStartOfNewGame() {\n    this.frameCounter++;\n    if (this.frameCounter >= this.frameTotal.beforeStartOfNewGame) {\n      this.frameCounter = 0;\n      this.view.menu.visible = false;\n      this.state = this.startOfNewGame;\n    }\n  }\n\n  /**\n   * Start of new game: Initialize ball and players and print game start message\n   * @type {GameState}\n   */\n  startOfNewGame() {\n    if (this.frameCounter === 0) {\n      this.view.game.visible = true;\n      this.gameEnded = false;\n      this.roundEnded = false;\n      this.isPlayer2Serve = false;\n      this.physics.player1.gameEnded = false;\n      this.physics.player1.isWinner = false;\n      this.physics.player2.gameEnded = false;\n      this.physics.player2.isWinner = false;\n\n      this.scores[0] = 0;\n      this.scores[1] = 0;\n      this.view.game.drawScoresToScoreBoards(this.scores);\n\n      this.physics.player1.initializeForNewRound();\n      this.physics.player2.initializeForNewRound();\n      this.physics.ball.initializeForNewRound(this.isPlayer2Serve);\n      this.view.game.drawPlayersAndBall(this.physics);\n\n      this.view.fadeInOut.setBlackAlphaTo(1); // set black screen\n      this.audio.sounds.bgm.play();\n    }\n\n    this.view.game.drawGameStartMessage(\n      this.frameCounter,\n      this.frameTotal.startOfNewGame\n    );\n    this.view.game.drawCloudsAndWave();\n    this.view.fadeInOut.changeBlackAlphaBy(-(1 / 17)); // fade in\n    this.frameCounter++;\n\n    if (this.frameCounter >= this.frameTotal.startOfNewGame) {\n      this.frameCounter = 0;\n      this.view.fadeInOut.setBlackAlphaTo(0);\n      this.state = this.round;\n    }\n  }\n\n  /**\n   * Round: the players play volleyball in this game state\n   * @type {GameState}\n   */\n  round() {\n    const pressedPowerHit =\n      this.keyboardArray[0].powerHit === 1 ||\n      this.keyboardArray[1].powerHit === 1;\n\n    if (\n      this.physics.player1.isComputer === true &&\n      this.physics.player2.isComputer === true &&\n      pressedPowerHit\n    ) {\n      this.frameCounter = 0;\n      this.view.game.visible = false;\n      this.state = this.intro;\n      return;\n    }\n\n    const isBallTouchingGround = this.physics.runEngineForNextFrame(\n      this.keyboardArray\n    );\n\n    this.playSoundEffect();\n    this.view.game.drawPlayersAndBall(this.physics);\n    this.view.game.drawCloudsAndWave();\n\n    if (this.gameEnded === true) {\n      this.view.game.drawGameEndMessage(this.frameCounter);\n      this.frameCounter++;\n      if (\n        this.frameCounter >= this.frameTotal.gameEnd ||\n        (this.frameCounter >= 70 && pressedPowerHit)\n      ) {\n        this.frameCounter = 0;\n        this.view.game.visible = false;\n        this.state = this.intro;\n      }\n      return;\n    }\n\n    if (\n      isBallTouchingGround &&\n      this._isPracticeMode === false &&\n      this.roundEnded === false &&\n      this.gameEnded === false\n    ) {\n      if (this.physics.ball.punchEffectX < GROUND_HALF_WIDTH) {\n        this.isPlayer2Serve = true;\n        if (this.scores[1] >= this.winningScore) {\n          this.gameEnded = true;\n          this.physics.player1.isWinner = false;\n          this.physics.player2.isWinner = true;\n          this.physics.player1.gameEnded = true;\n          this.physics.player2.gameEnded = true;\n        }\n      } else {\n        this.isPlayer2Serve = false;\n        if (this.scores[0] >= this.winningScore) {\n          this.gameEnded = true;\n          this.physics.player1.isWinner = true;\n          this.physics.player2.isWinner = false;\n          this.physics.player1.gameEnded = true;\n          this.physics.player2.gameEnded = true;\n        }\n      }\n      this.view.game.drawScoresToScoreBoards(this.scores);\n      if (this.roundEnded === false && this.gameEnded === false) {\n        this.slowMotionFramesLeft = this.SLOW_MOTION_FRAMES_NUM;\n      }\n      this.roundEnded = true;\n    }\n\n    if (this.roundEnded === true && this.gameEnded === false) {\n      // if this is the last frame of this round, begin fade out\n      if (this.slowMotionFramesLeft === 0) {\n        this.view.fadeInOut.changeBlackAlphaBy(1 / 16); // fade out\n        this.state = this.afterEndOfRound;\n      }\n    }\n  }\n\n  /**\n   * Fade out after end of round\n   * @type {GameState}\n   */\n  afterEndOfRound() {\n    this.view.fadeInOut.changeBlackAlphaBy(1 / 16);\n    this.frameCounter++;\n    if (this.frameCounter >= this.frameTotal.afterEndOfRound) {\n      this.frameCounter = 0;\n      this.state = this.beforeStartOfNextRound;\n    }\n  }\n\n  /**\n   * Before start of next round, initialize ball and players, and print ready message\n   * @type {GameState}\n   */\n  beforeStartOfNextRound() {\n    if (this.frameCounter === 0) {\n      this.view.fadeInOut.setBlackAlphaTo(1);\n      this.view.game.drawReadyMessage(false);\n\n      this.physics.player1.initializeForNewRound();\n      this.physics.player2.initializeForNewRound();\n      this.physics.ball.initializeForNewRound(this.isPlayer2Serve);\n      this.view.game.drawPlayersAndBall(this.physics);\n    }\n\n    this.view.game.drawCloudsAndWave();\n    this.view.fadeInOut.changeBlackAlphaBy(-(1 / 16));\n\n    this.frameCounter++;\n    if (this.frameCounter % 5 === 0) {\n      this.view.game.toggleReadyMessage();\n    }\n\n    if (this.frameCounter >= this.frameTotal.beforeStartOfNextRound) {\n      this.frameCounter = 0;\n      this.view.game.drawReadyMessage(false);\n      this.view.fadeInOut.setBlackAlphaTo(0);\n      this.roundEnded = false;\n      this.state = this.round;\n    }\n  }\n\n  /**\n   * Play sound effect on {@link round}\n   */\n  playSoundEffect() {\n    const audio = this.audio;\n    for (let i = 0; i < 2; i++) {\n      const player = this.physics[`player${i + 1}`];\n      const sound = player.sound;\n      let leftOrCenterOrRight = 0;\n      if (this.isStereoSound) {\n        leftOrCenterOrRight = i === 0 ? -1 : 1;\n      }\n      if (sound.pipikachu === true) {\n        audio.sounds.pipikachu.play(leftOrCenterOrRight);\n        sound.pipikachu = false;\n      }\n      if (sound.pika === true) {\n        audio.sounds.pika.play(leftOrCenterOrRight);\n        sound.pika = false;\n      }\n      if (sound.chu === true) {\n        audio.sounds.chu.play(leftOrCenterOrRight);\n        sound.chu = false;\n      }\n    }\n    const ball = this.physics.ball;\n    const sound = ball.sound;\n    let leftOrCenterOrRight = 0;\n    if (this.isStereoSound) {\n      if (ball.punchEffectX < GROUND_HALF_WIDTH) {\n        leftOrCenterOrRight = -1;\n      } else if (ball.punchEffectX > GROUND_HALF_WIDTH) {\n        leftOrCenterOrRight = 1;\n      }\n    }\n    if (sound.powerHit === true) {\n      audio.sounds.powerHit.play(leftOrCenterOrRight);\n      sound.powerHit = false;\n    }\n    if (sound.ballTouchesGround === true) {\n      audio.sounds.ballTouchesGround.play(leftOrCenterOrRight);\n      sound.ballTouchesGround = false;\n    }\n  }\n\n  /**\n   * Called if restart button clicked\n   */\n  restart() {\n    this.frameCounter = 0;\n    this.noInputFrameCounter = 0;\n    this.slowMotionFramesLeft = 0;\n    this.slowMotionNumOfSkippedFrames = 0;\n    this.view.menu.visible = false;\n    this.view.game.visible = false;\n    this.state = this.intro;\n  }\n\n  /** @return {boolean} */\n  get isPracticeMode() {\n    return this._isPracticeMode;\n  }\n\n  /**\n   * @param {boolean} bool true: turn on practice mode, false: turn off practice mode\n   */\n  set isPracticeMode(bool) {\n    this._isPracticeMode = bool;\n    this.view.game.scoreBoards[0].visible = !bool;\n    this.view.game.scoreBoards[1].visible = !bool;\n  }\n}","/**\n * Manages event listeners relevant to the UI (menu bar, buttons, etc.) of the web page\n */\n'use strict';\n\nimport { localStorageWrapper } from './utils/local_storage_wrapper.js';\n\n/** @typedef {import('./pikavolley.js').PikachuVolleyball} PikachuVolleyball */\n/** @typedef {import('@pixi/ticker').Ticker} Ticker */\n/** @typedef {{graphic?: string, bgm?: string, sfx?: string, speed?: string, winningScore?: string}} Options */\n\n/**\n * Enum for \"game paused by what?\".\n * The greater the number, the higher the precedence.\n *\n * @readonly\n * @enum {number}\n */\nconst PauseResumePrecedence = {\n  pauseBtn: 3,\n  messageBox: 2,\n  dropdown: 1,\n  notPaused: 0,\n};\n\n/**\n * Manages pausing and resuming of the game\n */\nconst pauseResumeManager = {\n  /** @type {number} PauseResumePrecedence enum */\n  _precedence: PauseResumePrecedence.notPaused,\n  /**\n   * Pause game\n   * @param {PikachuVolleyball} pikaVolley\n   * @param {number} precedence PauseResumePrecedence enum\n   */\n  pause: function (pikaVolley, precedence) {\n    // @ts-ignore\n    if (precedence > this._precedence) {\n      pikaVolley.paused = true;\n      this._precedence = precedence;\n    }\n  },\n  /**\n   * Resume game\n   * @param {PikachuVolleyball} pikaVolley\n   * @param {number} precedence PauseResumePrecedence enum\n   */\n  resume: function (pikaVolley, precedence) {\n    if (precedence === this._precedence) {\n      pikaVolley.paused = false;\n      this._precedence = PauseResumePrecedence.notPaused;\n    }\n  },\n};\n\n/**\n * Set up the user interface: menu bar, buttons, dropdowns, submenus, etc.\n * @param {PikachuVolleyball} pikaVolley\n * @param {Ticker} ticker\n */\nexport function setUpUI(pikaVolley, ticker) {\n  /**\n   * Apply options\n   * @param {Options} options\n   */\n  const applyOptions = (options) => {\n    setSelectedOptionsBtn(options);\n    switch (options.graphic) {\n      case 'sharp':\n        document.getElementById('game-canvas').classList.remove('graphic-soft');\n        break;\n      case 'soft':\n        document.getElementById('game-canvas').classList.add('graphic-soft');\n        break;\n    }\n    switch (options.bgm) {\n      case 'on':\n        pikaVolley.audio.turnBGMVolume(true);\n        break;\n      case 'off':\n        pikaVolley.audio.turnBGMVolume(false);\n        break;\n    }\n    switch (options.sfx) {\n      case 'stereo':\n        pikaVolley.audio.turnSFXVolume(true);\n        pikaVolley.isStereoSound = true;\n        break;\n      case 'mono':\n        pikaVolley.audio.turnSFXVolume(true);\n        pikaVolley.isStereoSound = false;\n        break;\n      case 'off':\n        pikaVolley.audio.turnSFXVolume(false);\n        break;\n    }\n    switch (options.speed) {\n      case 'slow':\n        pikaVolley.normalFPS = 20;\n        ticker.maxFPS = pikaVolley.normalFPS;\n        break;\n      case 'medium':\n        pikaVolley.normalFPS = 25;\n        ticker.maxFPS = pikaVolley.normalFPS;\n        break;\n      case 'fast':\n        pikaVolley.normalFPS = 30;\n        ticker.maxFPS = pikaVolley.normalFPS;\n        break;\n    }\n    switch (options.winningScore) {\n      case '5':\n        pikaVolley.winningScore = 5;\n        break;\n      case '10':\n        pikaVolley.winningScore = 10;\n        break;\n      case '15':\n        pikaVolley.winningScore = 15;\n        break;\n    }\n  };\n\n  /**\n   * Save options\n   * @param {Options} options\n   */\n  const saveOptions = (options) => {\n    setSelectedOptionsBtn(options);\n    if (options.graphic) {\n      localStorageWrapper.set('pv-offline-graphic', options.graphic);\n    }\n    if (options.bgm) {\n      localStorageWrapper.set('pv-offline-bgm', options.bgm);\n    }\n    if (options.sfx) {\n      localStorageWrapper.set('pv-offline-sfx', options.sfx);\n    }\n    if (options.speed) {\n      localStorageWrapper.set('pv-offline-speed', options.speed);\n    }\n    if (options.winningScore) {\n      localStorageWrapper.set('pv-offline-winningScore', options.winningScore);\n    }\n  };\n\n  /**\n   * Load options\n   * @returns {Options}\n   */\n  const loadOptions = () => ({\n    graphic: localStorageWrapper.get('pv-offline-graphic'),\n    bgm: localStorageWrapper.get('pv-offline-bgm'),\n    sfx: localStorageWrapper.get('pv-offline-sfx'),\n    speed: localStorageWrapper.get('pv-offline-speed'),\n    winningScore: localStorageWrapper.get('pv-offline-winningScore'),\n  });\n\n  /**\n   * Apply and save options\n   * @param {Options} options\n   */\n  const applyAndSaveOptions = (options) => {\n    applyOptions(options);\n    saveOptions(options);\n  };\n\n  // Load and apply saved options\n  applyOptions(loadOptions());\n\n  setUpBtns(pikaVolley, applyAndSaveOptions);\n  setUpToShowDropdownsAndSubmenus(pikaVolley);\n\n  // hide or show menubar if the user presses the \"esc\" key\n  window.addEventListener('keydown', (event) => {\n    if (event.code === 'Escape') {\n      const menuBar = document.getElementById('menu-bar');\n      if (menuBar.classList.contains('hidden')) {\n        menuBar.classList.remove('hidden');\n      } else {\n        menuBar.classList.add('hidden');\n      }\n      event.preventDefault();\n    } else if (event.code === 'Space') {\n      const aboutBox = document.getElementById('about-box');\n      if (aboutBox.classList.contains('hidden')) {\n        event.preventDefault();\n      }\n    }\n  });\n\n  document.addEventListener('visibilitychange', function () {\n    if (document.visibilityState === 'visible') {\n      pikaVolley.audio.unmuteAll();\n    } else {\n      pikaVolley.audio.muteAll();\n    }\n  });\n}\n\n/**\n * Attach event listeners to the buttons\n * @param {PikachuVolleyball} pikaVolley\n * @param {(options: Options) => void} applyAndSaveOptions\n */\nfunction setUpBtns(pikaVolley, applyAndSaveOptions) {\n  const gameDropdownBtn = document.getElementById('game-dropdown-btn');\n  const optionsDropdownBtn = document.getElementById('options-dropdown-btn');\n  const aboutBtn = document.getElementById('about-btn');\n  // @ts-ignore\n  gameDropdownBtn.disabled = false;\n  // @ts-ignore\n  optionsDropdownBtn.disabled = false;\n  // @ts-ignore\n  aboutBtn.disabled = false;\n\n  const pauseBtn = document.getElementById('pause-btn');\n  pauseBtn.addEventListener('click', () => {\n    if (pauseBtn.classList.contains('selected')) {\n      pauseBtn.classList.remove('selected');\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.pauseBtn);\n    } else {\n      pauseBtn.classList.add('selected');\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.pauseBtn);\n    }\n  });\n\n  const restartBtn = document.getElementById('restart-btn');\n  restartBtn.addEventListener('click', () => {\n    if (pauseBtn.classList.contains('selected')) {\n      pauseBtn.classList.remove('selected');\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.pauseBtn);\n    }\n    pikaVolley.restart();\n  });\n\n  const graphicSharpBtn = document.getElementById('graphic-sharp-btn');\n  const graphicSoftBtn = document.getElementById('graphic-soft-btn');\n  graphicSharpBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ graphic: 'sharp' });\n  });\n  graphicSoftBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ graphic: 'soft' });\n  });\n\n  const bgmOnBtn = document.getElementById('bgm-on-btn');\n  const bgmOffBtn = document.getElementById('bgm-off-btn');\n  bgmOnBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ bgm: 'on' });\n  });\n  bgmOffBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ bgm: 'off' });\n  });\n\n  const stereoBtn = document.getElementById('stereo-btn');\n  const monoBtn = document.getElementById('mono-btn');\n  const sfxOffBtn = document.getElementById('sfx-off-btn');\n  stereoBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ sfx: 'stereo' });\n  });\n  monoBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ sfx: 'mono' });\n  });\n  sfxOffBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ sfx: 'off' });\n  });\n\n  // Game speed:\n  //   slow: 1 frame per 50ms = 20 FPS\n  //   medium: 1 frame per 40ms = 25 FPS\n  //   fast: 1 frame per 33ms = 30.303030... FPS\n  const slowSpeedBtn = document.getElementById('slow-speed-btn');\n  const mediumSpeedBtn = document.getElementById('medium-speed-btn');\n  const fastSpeedBtn = document.getElementById('fast-speed-btn');\n  slowSpeedBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ speed: 'slow' });\n  });\n  mediumSpeedBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ speed: 'medium' });\n  });\n  fastSpeedBtn.addEventListener('click', () => {\n    applyAndSaveOptions({ speed: 'fast' });\n  });\n\n  const winningScore5Btn = document.getElementById('winning-score-5-btn');\n  const winningScore10Btn = document.getElementById('winning-score-10-btn');\n  const winningScore15Btn = document.getElementById('winning-score-15-btn');\n  const noticeBox1 = document.getElementById('notice-box-1');\n  const noticeOKBtn1 = document.getElementById('notice-ok-btn-1');\n  const winningScoreInNoticeBox1 = document.getElementById(\n    'winning-score-in-notice-box-1'\n  );\n  function isWinningScoreAlreadyReached(winningScore) {\n    const isGamePlaying =\n      pikaVolley.state === pikaVolley.round ||\n      pikaVolley.state === pikaVolley.afterEndOfRound ||\n      pikaVolley.state === pikaVolley.beforeStartOfNextRound;\n    if (\n      isGamePlaying &&\n      (pikaVolley.scores[0] >= winningScore ||\n        pikaVolley.scores[1] >= winningScore)\n    ) {\n      return true;\n    }\n    return false;\n  }\n  const noticeBox2 = document.getElementById('notice-box-2');\n  const noticeOKBtn2 = document.getElementById('notice-ok-btn-2');\n  winningScore5Btn.addEventListener('click', () => {\n    if (winningScore5Btn.classList.contains('selected')) {\n      return;\n    }\n    if (pikaVolley.isPracticeMode === true) {\n      noticeBox2.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    if (isWinningScoreAlreadyReached(5)) {\n      winningScoreInNoticeBox1.textContent = '5';\n      noticeBox1.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    applyAndSaveOptions({ winningScore: '5' });\n  });\n  winningScore10Btn.addEventListener('click', () => {\n    if (winningScore10Btn.classList.contains('selected')) {\n      return;\n    }\n    if (pikaVolley.isPracticeMode === true) {\n      noticeBox2.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    if (isWinningScoreAlreadyReached(10)) {\n      winningScoreInNoticeBox1.textContent = '10';\n      noticeBox1.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    applyAndSaveOptions({ winningScore: '10' });\n  });\n  winningScore15Btn.addEventListener('click', () => {\n    if (winningScore15Btn.classList.contains('selected')) {\n      return;\n    }\n    if (pikaVolley.isPracticeMode === true) {\n      noticeBox2.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    if (isWinningScoreAlreadyReached(15)) {\n      winningScoreInNoticeBox1.textContent = '15';\n      noticeBox1.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      // @ts-ignore\n      aboutBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n      return;\n    }\n    applyAndSaveOptions({ winningScore: '15' });\n  });\n  noticeOKBtn1.addEventListener('click', () => {\n    if (!noticeBox1.classList.contains('hidden')) {\n      noticeBox1.classList.add('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = false;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = false;\n      // @ts-ignore\n      aboutBtn.disabled = false;\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.messageBox);\n    }\n  });\n  noticeOKBtn2.addEventListener('click', () => {\n    if (!noticeBox2.classList.contains('hidden')) {\n      noticeBox2.classList.add('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = false;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = false;\n      // @ts-ignore\n      aboutBtn.disabled = false;\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.messageBox);\n    }\n  });\n\n  const practiceModeOnBtn = document.getElementById('practice-mode-on-btn');\n  const practiceModeOffBtn = document.getElementById('practice-mode-off-btn');\n  practiceModeOnBtn.addEventListener('click', () => {\n    practiceModeOffBtn.classList.remove('selected');\n    practiceModeOnBtn.classList.add('selected');\n    pikaVolley.isPracticeMode = true;\n  });\n  practiceModeOffBtn.addEventListener('click', () => {\n    practiceModeOnBtn.classList.remove('selected');\n    practiceModeOffBtn.classList.add('selected');\n    pikaVolley.isPracticeMode = false;\n  });\n\n  const aboutBox = document.getElementById('about-box');\n  const closeAboutBtn = document.getElementById('close-about-btn');\n  aboutBtn.addEventListener('click', () => {\n    if (aboutBox.classList.contains('hidden')) {\n      aboutBox.classList.remove('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = true;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = true;\n      pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.messageBox);\n    } else {\n      aboutBox.classList.add('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = false;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = false;\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.messageBox);\n    }\n  });\n  closeAboutBtn.addEventListener('click', () => {\n    if (!aboutBox.classList.contains('hidden')) {\n      aboutBox.classList.add('hidden');\n      // @ts-ignore\n      gameDropdownBtn.disabled = false;\n      // @ts-ignore\n      optionsDropdownBtn.disabled = false;\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.messageBox);\n    }\n  });\n\n  const resetToDefaultBtn = document.getElementById('reset-to-default-btn');\n  resetToDefaultBtn.addEventListener('click', () => {\n    // turn off practice mode\n    practiceModeOffBtn.click();\n\n    // and restore the reset options to default\n    const defaultOptions = {\n      graphic: 'sharp',\n      bgm: 'on',\n      sfx: 'stereo',\n      speed: 'medium',\n      winningScore: '15',\n    };\n    applyAndSaveOptions(defaultOptions);\n  });\n}\n\n/**\n * Set selected (checked) options btn fit to options\n * @param {Options} options\n */\nfunction setSelectedOptionsBtn(options) {\n  if (options.graphic) {\n    const graphicSharpBtn = document.getElementById('graphic-sharp-btn');\n    const graphicSoftBtn = document.getElementById('graphic-soft-btn');\n    switch (options.graphic) {\n      case 'sharp':\n        graphicSoftBtn.classList.remove('selected');\n        graphicSharpBtn.classList.add('selected');\n        break;\n      case 'soft':\n        graphicSharpBtn.classList.remove('selected');\n        graphicSoftBtn.classList.add('selected');\n        break;\n    }\n  }\n  if (options.bgm) {\n    const bgmOnBtn = document.getElementById('bgm-on-btn');\n    const bgmOffBtn = document.getElementById('bgm-off-btn');\n    switch (options.bgm) {\n      case 'on':\n        bgmOffBtn.classList.remove('selected');\n        bgmOnBtn.classList.add('selected');\n        break;\n      case 'off':\n        bgmOnBtn.classList.remove('selected');\n        bgmOffBtn.classList.add('selected');\n        break;\n    }\n  }\n  if (options.sfx) {\n    const stereoBtn = document.getElementById('stereo-btn');\n    const monoBtn = document.getElementById('mono-btn');\n    const sfxOffBtn = document.getElementById('sfx-off-btn');\n    switch (options.sfx) {\n      case 'stereo':\n        monoBtn.classList.remove('selected');\n        sfxOffBtn.classList.remove('selected');\n        stereoBtn.classList.add('selected');\n        break;\n      case 'mono':\n        sfxOffBtn.classList.remove('selected');\n        stereoBtn.classList.remove('selected');\n        monoBtn.classList.add('selected');\n        break;\n      case 'off':\n        stereoBtn.classList.remove('selected');\n        monoBtn.classList.remove('selected');\n        sfxOffBtn.classList.add('selected');\n        break;\n    }\n  }\n  if (options.speed) {\n    const slowSpeedBtn = document.getElementById('slow-speed-btn');\n    const mediumSpeedBtn = document.getElementById('medium-speed-btn');\n    const fastSpeedBtn = document.getElementById('fast-speed-btn');\n    switch (options.speed) {\n      case 'slow':\n        mediumSpeedBtn.classList.remove('selected');\n        fastSpeedBtn.classList.remove('selected');\n        slowSpeedBtn.classList.add('selected');\n        break;\n      case 'medium':\n        fastSpeedBtn.classList.remove('selected');\n        slowSpeedBtn.classList.remove('selected');\n        mediumSpeedBtn.classList.add('selected');\n        break;\n      case 'fast':\n        slowSpeedBtn.classList.remove('selected');\n        mediumSpeedBtn.classList.remove('selected');\n        fastSpeedBtn.classList.add('selected');\n        break;\n    }\n  }\n  if (options.winningScore) {\n    const winningScore5Btn = document.getElementById('winning-score-5-btn');\n    const winningScore10Btn = document.getElementById('winning-score-10-btn');\n    const winningScore15Btn = document.getElementById('winning-score-15-btn');\n    switch (options.winningScore) {\n      case '5':\n        winningScore10Btn.classList.remove('selected');\n        winningScore15Btn.classList.remove('selected');\n        winningScore5Btn.classList.add('selected');\n        break;\n      case '10':\n        winningScore15Btn.classList.remove('selected');\n        winningScore5Btn.classList.remove('selected');\n        winningScore10Btn.classList.add('selected');\n        break;\n      case '15':\n        winningScore5Btn.classList.remove('selected');\n        winningScore10Btn.classList.remove('selected');\n        winningScore15Btn.classList.add('selected');\n        break;\n    }\n  }\n}\n\n/**\n * Attach event listeners to show dropdowns and submenus properly\n * @param {PikachuVolleyball} pikaVolley\n */\nfunction setUpToShowDropdownsAndSubmenus(pikaVolley) {\n  // hide dropdowns and submenus if the user clicks outside of these\n  window.addEventListener('click', (event) => {\n    // @ts-ignore\n    if (!event.target.matches('.dropdown-btn, .submenu-btn')) {\n      hideSubmenus();\n      hideDropdownsExcept('');\n      pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.dropdown);\n    }\n  });\n\n  // set up to show dropdowns\n  document.getElementById('game-dropdown-btn').addEventListener('click', () => {\n    toggleDropdown('game-dropdown', pikaVolley);\n  });\n  document\n    .getElementById('options-dropdown-btn')\n    .addEventListener('click', () => {\n      toggleDropdown('options-dropdown', pikaVolley);\n    });\n\n  // set up to show submenus on mouseover event\n  document\n    .getElementById('graphic-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('graphic-submenu-btn', 'graphic-submenu');\n    });\n  document\n    .getElementById('bgm-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('bgm-submenu-btn', 'bgm-submenu');\n    });\n  document\n    .getElementById('sfx-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('sfx-submenu-btn', 'sfx-submenu');\n    });\n  document\n    .getElementById('speed-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('speed-submenu-btn', 'speed-submenu');\n    });\n  document\n    .getElementById('winning-score-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('winning-score-submenu-btn', 'winning-score-submenu');\n    });\n  document\n    .getElementById('practice-mode-submenu-btn')\n    .addEventListener('mouseover', () => {\n      showSubmenu('practice-mode-submenu-btn', 'practice-mode-submenu');\n    });\n  document\n    .getElementById('reset-to-default-btn')\n    .addEventListener('mouseover', () => {\n      hideSubmenus();\n    });\n\n  // set up to show submenus on click event\n  // (it is for touch device equipped with physical keyboard)\n  document.getElementById('bgm-submenu-btn').addEventListener('click', () => {\n    showSubmenu('bgm-submenu-btn', 'bgm-submenu');\n  });\n  document.getElementById('sfx-submenu-btn').addEventListener('click', () => {\n    showSubmenu('sfx-submenu-btn', 'sfx-submenu');\n  });\n  document.getElementById('speed-submenu-btn').addEventListener('click', () => {\n    showSubmenu('speed-submenu-btn', 'speed-submenu');\n  });\n  document\n    .getElementById('winning-score-submenu-btn')\n    .addEventListener('click', () => {\n      showSubmenu('winning-score-submenu-btn', 'winning-score-submenu');\n    });\n  document\n    .getElementById('practice-mode-submenu-btn')\n    .addEventListener('click', () => {\n      showSubmenu('practice-mode-submenu-btn', 'practice-mode-submenu');\n    });\n  document\n    .getElementById('reset-to-default-btn')\n    .addEventListener('click', () => {\n      hideSubmenus();\n    });\n}\n\n/**\n * Toggle (show or hide) the dropdown menu\n * @param {string} dropdownID html element id of the dropdown to toggle\n * @param {PikachuVolleyball} pikaVolley\n */\nfunction toggleDropdown(dropdownID, pikaVolley) {\n  hideSubmenus();\n  hideDropdownsExcept(dropdownID);\n  const willShow = document.getElementById(dropdownID).classList.toggle('show');\n  if (willShow) {\n    pauseResumeManager.pause(pikaVolley, PauseResumePrecedence.dropdown);\n  } else {\n    pauseResumeManager.resume(pikaVolley, PauseResumePrecedence.dropdown);\n  }\n}\n\n/**\n * Show the submenu\n * @param {string} submenuBtnID html element id of the submenu button whose submenu to show\n * @param {string} subMenuID html element id of the submenu to show\n */\nfunction showSubmenu(submenuBtnID, subMenuID) {\n  hideSubmenus();\n  document.getElementById(submenuBtnID).classList.add('open');\n  document.getElementById(subMenuID).classList.add('show');\n}\n\n/**\n * Hide all other dropdowns except the dropdown\n * @param {string} dropdownID html element id of the dropdown\n */\nfunction hideDropdownsExcept(dropdownID) {\n  const dropdowns = document.getElementsByClassName('dropdown');\n  for (let i = 0; i < dropdowns.length; i++) {\n    if (dropdowns[i].id !== dropdownID) {\n      dropdowns[i].classList.remove('show');\n    }\n  }\n}\n\n/**\n * Hide all submenus\n */\nfunction hideSubmenus() {\n  const submenus = document.getElementsByClassName('submenu');\n  for (let i = 0; i < submenus.length; i++) {\n    submenus[i].classList.remove('show');\n  }\n  const submenuBtns = document.getElementsByClassName('submenu-btn');\n  for (let i = 0; i < submenuBtns.length; i++) {\n    submenuBtns[i].classList.remove('open');\n  }\n}\n","/**\n * This is the main script which executes the game.\n * General explanations for the all source code files of the game are following.\n *\n ********************************************************************************************************************\n * This web version of the Pikachu Volleyball is made by\n * reverse engineering the core part of the original Pikachu Volleyball game\n * which is developed by \"1997 (C) SACHI SOFT / SAWAYAKAN Programmers\" & \"1997 (C) Satoshi Takenouchi\".\n *\n * \"physics.js\", \"cloud_and_wave.js\", and some codes in \"view.js\" are the results of this reverse engineering.\n * Refer to the comments in each file for the machine code addresses of the original functions.\n ********************************************************************************************************************\n *\n * This web version game is mainly composed of three parts which follows MVC pattern.\n *  1) \"physics.js\" (Model): The physics engine which takes charge of the dynamics of the ball and the players (Pikachus).\n *                           It is gained by reverse engineering the machine code of the original game.\n *  2) \"view.js\" (View): The rendering part of the game which depends on pixi.js (https://www.pixijs.com/, https://github.com/pixijs/pixi.js) library.\n *                       Some codes in this part is gained by reverse engineering the original machine code.\n *  3) \"pikavolley.js\" (Controller): Make the game work by controlling the Model and the View according to the user input.\n *\n * And explanations for other source files are below.\n *  - \"cloud_and_wave.js\": This is also a Model part which takes charge of the clouds and wave motion in the game. Of course, it is also rendered by \"view.js\".\n *                         It is also gained by reverse engineering the original machine code.\n *  - \"keyboard.js\": Support the Controller(\"pikavolley.js\") to get a user input via keyboard.\n *  - \"audio.js\": The game audio or sounds. It depends on pixi-sound (https://github.com/pixijs/pixi-sound) library.\n *  - \"rand.js\": For the random function used in the Models (\"physics.js\", \"cloud_and_wave.js\").\n *  - \"assets_path.js\": For the assets (image files, sound files) locations.\n *  - \"ui.js\": For the user interface (menu bar, buttons etc.) of the html page.\n */\n'use strict';\nimport { settings } from '@pixi/settings';\nimport { SCALE_MODES } from '@pixi/constants';\nimport { Renderer, BatchRenderer, autoDetectRenderer } from '@pixi/core';\nimport { Prepare } from '@pixi/prepare';\nimport { Container } from '@pixi/display';\nimport { Loader } from '@pixi/loaders';\nimport { SpritesheetLoader } from '@pixi/spritesheet';\nimport { Ticker } from '@pixi/ticker';\nimport { CanvasRenderer } from '@pixi/canvas-renderer';\nimport { CanvasSpriteRenderer } from '@pixi/canvas-sprite';\nimport { CanvasPrepare } from '@pixi/canvas-prepare';\nimport '@pixi/canvas-display';\nimport { PikachuVolleyball } from './pikavolley.js';\nimport { ASSETS_PATH } from './assets_path.js';\nimport { setUpUI } from './ui.js';\n\n// Reference for how to use Renderer.registerPlugin:\n// https://github.com/pixijs/pixijs/blob/af3c0c6bb15aeb1049178c972e4a14bb4cabfce4/bundles/pixi.js/src/index.ts#L27-L34\nRenderer.registerPlugin('prepare', Prepare);\nRenderer.registerPlugin('batch', BatchRenderer);\n// Reference for how to use CanvasRenderer.registerPlugin:\n// https://github.com/pixijs/pixijs/blob/af3c0c6bb15aeb1049178c972e4a14bb4cabfce4/bundles/pixi.js-legacy/src/index.ts#L13-L19\nCanvasRenderer.registerPlugin('prepare', CanvasPrepare);\nCanvasRenderer.registerPlugin('sprite', CanvasSpriteRenderer);\nLoader.registerPlugin(SpritesheetLoader);\n\n// Set settings.RESOLUTION to 2 instead of 1 to make the game screen do not look\n// much blurry in case of the image rendering mode of 'image-rendering: auto',\n// which is like bilinear interpolation, which is used in \"soft\" game graphic option.\nsettings.RESOLUTION = 2;\nsettings.SCALE_MODE = SCALE_MODES.NEAREST;\nsettings.ROUND_PIXELS = true;\n\nconst renderer = autoDetectRenderer({\n  width: 432,\n  height: 304,\n  antialias: false,\n  backgroundColor: 0x000000,\n  backgroundAlpha: 1,\n  // Decided to use only Canvas for compatibility reason. One player had reported that\n  // on their browser, where pixi chooses to use WebGL renderer, the graphics are not fine.\n  // And the issue had been fixed by using Canvas renderer. And also for the sake of testing,\n  // it is more comfortable just to stick with Canvas renderer so that it is unnecessary to switch\n  // between WebGL renderer and Canvas renderer.\n  forceCanvas: true,\n});\n\nconst stage = new Container();\nconst ticker = new Ticker();\nconst loader = new Loader();\n\nrenderer.view.setAttribute('id', 'game-canvas');\ndocument.getElementById('game-canvas-container').appendChild(renderer.view);\nrenderer.render(stage); // To make the initial canvas painting stable in the Firefox browser.\n\nloader.add(ASSETS_PATH.SPRITE_SHEET);\nfor (const prop in ASSETS_PATH.SOUNDS) {\n  loader.add(ASSETS_PATH.SOUNDS[prop]);\n}\n\nsetUpInitialUI();\n\n/**\n * Set up the initial UI.\n */\nfunction setUpInitialUI() {\n  const loadingBox = document.getElementById('loading-box');\n  const progressBar = document.getElementById('progress-bar');\n  loader.onProgress.add(() => {\n    progressBar.style.width = `${loader.progress}%`;\n  });\n  loader.onComplete.add(() => {\n    loadingBox.classList.add('hidden');\n  });\n\n  const aboutBox = document.getElementById('about-box');\n  const aboutBtn = document.getElementById('about-btn');\n  const closeAboutBtn = document.getElementById('close-about-btn');\n  const gameDropdownBtn = document.getElementById('game-dropdown-btn');\n  const optionsDropdownBtn = document.getElementById('options-dropdown-btn');\n  // @ts-ignore\n  gameDropdownBtn.disabled = true;\n  // @ts-ignore\n  optionsDropdownBtn.disabled = true;\n  const closeAboutBox = () => {\n    if (!aboutBox.classList.contains('hidden')) {\n      aboutBox.classList.add('hidden');\n      // @ts-ignore\n      aboutBtn.disabled = true;\n    }\n    aboutBtn.getElementsByClassName('text-play')[0].classList.add('hidden');\n    aboutBtn.getElementsByClassName('text-about')[0].classList.remove('hidden');\n    aboutBtn.classList.remove('glow');\n    closeAboutBtn\n      .getElementsByClassName('text-play')[0]\n      .classList.add('hidden');\n    closeAboutBtn\n      .getElementsByClassName('text-close')[0]\n      .classList.remove('hidden');\n    closeAboutBtn.classList.remove('glow');\n\n    loader.load(setup); // setup is called after loader finishes loading\n    loadingBox.classList.remove('hidden');\n    aboutBtn.removeEventListener('click', closeAboutBox);\n    closeAboutBtn.removeEventListener('click', closeAboutBox);\n  };\n  aboutBtn.addEventListener('click', closeAboutBox);\n  closeAboutBtn.addEventListener('click', closeAboutBox);\n}\n\n/**\n * Set up the game and the full UI, and start the game.\n */\nfunction setup() {\n  const pikaVolley = new PikachuVolleyball(stage, loader.resources);\n  setUpUI(pikaVolley, ticker);\n  start(pikaVolley);\n}\n\n/**\n * Start the game.\n * @param {PikachuVolleyball} pikaVolley\n */\nfunction start(pikaVolley) {\n  ticker.maxFPS = pikaVolley.normalFPS;\n  ticker.add(() => {\n    pikaVolley.gameLoop();\n    renderer.render(stage);\n  });\n  ticker.start();\n}\n","export const localStorageWrapper = {\n  /**\n   * Get value corresponding to the key from localStorage\n   * @param {string} key\n   * @returns {string|null}\n   */\n  get: (key) => {\n    let value = null;\n    try {\n      value = localStorage.getItem(key);\n    } catch (err) {\n      console.error(err);\n    }\n    return value;\n  },\n\n  /*\n   * Set key-value pair to the localStorage\n   * @param {string} key\n   * @param {string} value\n   */\n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, value);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n};\n","/**\n * Manages the paths (file locations) of the game assets.\n */\n'use strict';\n\nexport const ASSETS_PATH = {\n  SPRITE_SHEET: '../resources/assets/images/sprite_sheet.json',\n  TEXTURES: {},\n  SOUNDS: {},\n};\n\nconst TEXTURES = ASSETS_PATH.TEXTURES;\nTEXTURES.PIKACHU = (i, j) => `pikachu/pikachu_${i}_${j}.png`;\nTEXTURES.BALL = (s) => `ball/ball_${s}.png`;\nTEXTURES.NUMBER = (n) => `number/number_${n}.png`;\n\nTEXTURES.SKY_BLUE = 'objects/sky_blue.png';\nTEXTURES.MOUNTAIN = 'objects/mountain.png';\nTEXTURES.GROUND_RED = 'objects/ground_red.png';\nTEXTURES.GROUND_LINE = 'objects/ground_line.png';\nTEXTURES.GROUND_LINE_LEFT_MOST = 'objects/ground_line_leftmost.png';\nTEXTURES.GROUND_LINE_RIGHT_MOST = 'objects/ground_line_rightmost.png';\nTEXTURES.GROUND_YELLOW = 'objects/ground_yellow.png';\nTEXTURES.NET_PILLAR_TOP = 'objects/net_pillar_top.png';\nTEXTURES.NET_PILLAR = 'objects/net_pillar.png';\nTEXTURES.SHADOW = 'objects/shadow.png';\nTEXTURES.BALL_HYPER = 'ball/ball_hyper.png';\nTEXTURES.BALL_TRAIL = 'ball/ball_trail.png';\nTEXTURES.BALL_PUNCH = 'ball/ball_punch.png';\nTEXTURES.CLOUD = 'objects/cloud.png';\nTEXTURES.WAVE = 'objects/wave.png';\nTEXTURES.BLACK = 'objects/black.png';\n\nTEXTURES.SACHISOFT = 'messages/common/sachisoft.png';\nTEXTURES.READY = 'messages/common/ready.png';\nTEXTURES.GAME_END = 'messages/common/game_end.png';\n\nTEXTURES.MARK = 'messages/ja/mark.png';\nTEXTURES.POKEMON = 'messages/ja/pokemon.png';\nTEXTURES.PIKACHU_VOLLEYBALL = 'messages/ja/pikachu_volleyball.png';\nTEXTURES.FIGHT = 'messages/ja/fight.png';\nTEXTURES.WITH_COMPUTER = 'messages/ja/with_computer.png';\nTEXTURES.WITH_FRIEND = 'messages/ja/with_friend.png';\nTEXTURES.GAME_START = 'messages/ja/game_start.png';\n\nTEXTURES.SITTING_PIKACHU = 'sitting_pikachu.png';\n\nconst SOUNDS = ASSETS_PATH.SOUNDS;\nSOUNDS.BGM = '../resources/assets/sounds/bgm.mp3';\nSOUNDS.PIPIKACHU = '../resources/assets/sounds/WAVE140_1.wav';\nSOUNDS.PIKA = '../resources/assets/sounds/WAVE141_1.wav';\nSOUNDS.CHU = '../resources/assets/sounds/WAVE142_1.wav';\nSOUNDS.PI = '../resources/assets/sounds/WAVE143_1.wav';\nSOUNDS.PIKACHU = '../resources/assets/sounds/WAVE144_1.wav';\nSOUNDS.POWERHIT = '../resources/assets/sounds/WAVE145_1.wav';\nSOUNDS.BALLTOUCHESGROUND = '../resources/assets/sounds/WAVE146_1.wav';\n"],"names":["customRng","rand","Math","floor","random","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","toPrimitive","call","String","_toPrimitive","GROUND_HALF_WIDTH","GROUND_WIDTH","PLAYER_TOUCHING_GROUND_Y_COORD","PikaPhysics","isPlayer1Computer","isPlayer2Computer","this","player1","Player","player2","ball","Ball","value","userInputArray","isBallTouchingGround","player","previousPreviousX","previousX","previousPreviousY","previousY","x","y","futureFineRotation","fineRotation","xVelocity","rotation","futureBallX","futureBallY","yVelocity","abs","sound","ballTouchesGround","punchEffectX","punchEffectRadius","punchEffectY","BALL_TOUCHING_GROUND_Y_COORD","processCollisionBetweenBallAndWorldAndSetBallPosition","calculateExpectedLandingPointXFor","processPlayerMovementAndSetPlayerPosition","isCollisionBetweenBallAndPlayerHappened","isCollisionWithBallHappened","processCollisionBetweenBallAndPlayer","state","physicsEngine","PikaUserInput","xDirection","yDirection","powerHit","isPlayer2","isComputer","initializeForNewRound","divingDirection","lyingDownDurationLeft","isWinner","gameEnded","computerWhereToStandBy","pipikachu","pika","chu","frameNumber","normalStatusArmSwingDirection","delayBeforeNextFrame","computerBoldness","isPlayer2Serve","expectedLandingPointX","isPowerHit","playerX","playerY","diff","PLAYER_LENGTH","userInput","theOtherPlayer","playerVelocityX","futurePlayerX","futurePlayerY","futureFrameNumber","processGameEndFrameFor","playerState","ballAbsYVelocity","copyBall","loopCounter","futureCopyBallX","Cloud","topLeftPointX","topLeftPointY","topLeftPointXVelocity","sizeDiffTurnNumber","get","sizeDiff","Wave","verticalCoord","verticalCoordVelocity","yCoords","push","TEXTURES","ASSETS_PATH","IntroView","resources","textures","SPRITE_SHEET","mark","makeSpriteWithAnchorXY","MARK","container","Container","addChild","visible","set","bool","frameCounter","alpha","min","max","MenuView","messages","pokemon","POKEMON","pikachuVolleyball","PIKACHU_VOLLEYBALL","withWho","WITH_COMPUTER","WITH_FRIEND","sachisoft","SACHISOFT","fight","FIGHT","sittingPikachuTilesContainer","texture","SITTING_PIKACHU","w","width","h","height","j","addChildToParentAndSetLocalPosition","Sprite","makeSittingPikachuTilesContainer","initializeVisibles","sittingPikachuTilesDisplacement","selectedWithWho","selectedWithWhoMessageSizeIncrement","prop","sizeArray","fightMessage","halfWidth","halfHeight","index","getChildAt","xDiff","selected","Number","halfWidthIncrement","halfHeightIncrement","GameView","bgContainer","SKY_BLUE","MOUNTAIN","GROUND_RED","GROUND_LINE","GROUND_LINE_LEFT_MOST","GROUND_LINE_RIGHT_MOST","GROUND_YELLOW","NET_PILLAR_TOP","NET_PILLAR","makeBGContainer","playerSprites","getPlayerTexture","PIKACHU","playerTextureArray","player1AnimatedSprite","AnimatedSprite","player2AnimatedSprite","anchor","makePlayerAnimatedSprites","getBallTexture","s","BALL","ballTextureArray","ballAnimatedSprite","makeBallAnimatedSprites","ballHyper","BALL_HYPER","ballTrail","BALL_TRAIL","punch","BALL_PUNCH","scoreBoards","makeScoreBoardSprite","shadows","forPlayer1","SHADOW","forPlayer2","forBall","gameStart","GAME_START","ready","READY","gameEnd","GAME_END","cloudContainer","CLOUD","cloud","makeCloudContainer","waveContainer","WAVE","makeWaveContainer","cloudArray","wave","physics","scale","frameNumber1","getFrameNumberForPlayerAnimatedSprite","frameNumber2","gotoAndStop","scores","scoreBoard","score","unitsAnimatedSprite","tensAnimatedSprite","cloudAndWaveEngine","cloudSprite","spriteTopLeftPointX","spriteTopLeftPointY","spriteWidth","spriteHeight","frameTotal","gameStartMessage","gameEndMessage","FadeInOut","black","BLACK","alphaIncrement","path","anchorX","anchorY","sprite","numberTextureArray","NUMBER","numberAnimatedSprites","setChildIndex","parent","child","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_setPrototypeOf","PikaKeyboard","_PikaUserInput","left","right","up","down","_this","extraKeys","arguments","undefined","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","apply","powerHitKeyIsDownPrevious","keys","Key","Array","isArray","map","create","_inherits","_this$keys$","leftPressed","isDown","some","rightPressed","upPressed","downPressed","includes","powerHitPressed","forEach","subscribe","downRightKey","unsubscribe","isUp","downListener","downHandler","upListener","upHandler","event","code","preventDefault","window","addEventListener","removeEventListener","SOUNDS","PikaAudio","sounds","bgm","PikaStereoSound","BGM","PIPIKACHU","PIKA","CHU","pi","PI","pikachu","POWERHIT","BALLTOUCHESGROUND","loop","properBGMVolume","properSFXVolume","adjustVolume","volume","turnOn","muteAll","unmuteAll","center","Sound","from","url","centerPanning","filters","StereoFilter","leftPanning","rightPanning","v","leftOrCenterOrRight","play","stop","PikachuVolleyball","stage","view","intro","menu","game","fadeInOut","audio","keyboardArray","normalFPS","slowMotionFPS","SLOW_MOTION_FRAMES_NUM","slowMotionFramesLeft","slowMotionNumOfSkippedFrames","winningScore","roundEnded","afterMenuSelection","beforeStartOfNewGame","startOfNewGame","afterEndOfRound","beforeStartOfNextRound","noInputFrameCounter","noInputFrameTotal","paused","isStereoSound","_isPracticeMode","round","getInput","setBlackAlphaTo","drawMark","selectWithWho","drawFightMessage","drawSachisoft","drawSittingPikachuTiles","drawPikachuVolleyballMessage","drawPokemonMessage","drawWithWhoMessages","changeBlackAlphaBy","drawScoresToScoreBoards","drawPlayersAndBall","drawGameStartMessage","drawCloudsAndWave","pressedPowerHit","runEngineForNextFrame","playSoundEffect","drawGameEndMessage","drawReadyMessage","toggleReadyMessage","concat","pauseResumeManager","_precedence","pause","pikaVolley","precedence","resume","setSelectedOptionsBtn","options","graphic","graphicSharpBtn","document","getElementById","graphicSoftBtn","classList","remove","add","bgmOnBtn","bgmOffBtn","sfx","stereoBtn","monoBtn","sfxOffBtn","speed","slowSpeedBtn","mediumSpeedBtn","fastSpeedBtn","winningScore5Btn","winningScore10Btn","winningScore15Btn","toggleDropdown","dropdownID","hideSubmenus","hideDropdownsExcept","toggle","showSubmenu","submenuBtnID","subMenuID","dropdowns","getElementsByClassName","id","submenus","submenuBtns","Renderer","registerPlugin","Prepare","BatchRenderer","CanvasRenderer","CanvasPrepare","CanvasSpriteRenderer","Loader","SpritesheetLoader","settings","RESOLUTION","SCALE_MODE","SCALE_MODES","NEAREST","ROUND_PIXELS","renderer","autoDetectRenderer","antialias","backgroundColor","backgroundAlpha","forceCanvas","ticker","Ticker","loader","setAttribute","appendChild","render","setup","applyOptions","turnBGMVolume","turnSFXVolume","maxFPS","localStorageWrapper","applyAndSaveOptions","gameDropdownBtn","optionsDropdownBtn","aboutBtn","disabled","pauseBtn","contains","restart","noticeBox1","noticeOKBtn1","winningScoreInNoticeBox1","isWinningScoreAlreadyReached","noticeBox2","noticeOKBtn2","isPracticeMode","textContent","practiceModeOnBtn","practiceModeOffBtn","aboutBox","closeAboutBtn","click","setUpBtns","saveOptions","target","matches","setUpToShowDropdownsAndSubmenus","menuBar","visibilityState","setUpUI","gameLoop","start","loadingBox","progressBar","onProgress","style","progress","onComplete","closeAboutBox","load","setUpInitialUI","localStorage","getItem","err","console","error","setItem"],"sourceRoot":""}